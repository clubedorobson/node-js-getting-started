


warn [Tue Jan 12 2021 01:00:50 GMT-0200 (GMT-02:00)]  { status: 200,
  statusText: 'OK',
  headers:
   { 'content-type': 'application/json',
     server: 'nginx',
     'referrer-policy': 'origin-when-cross-origin, strict-origin-when-cross-origin',
     'x-frame-options': 'DENY',
     'x-xss-protection': '1; mode=block',
     'x-content-type-options': 'nosniff',
     'content-security-policy': 'default-src \'self\'',
     'access-control-allow-origin': 'https://www.ea.com',
     'access-control-allow-credentials': 'true',
     'x-permitted-cross-domain-policies': 'master-only',
     'content-length': '813',
     'cache-control': 'max-age=300',
     expires: 'Tue, 12 Jan 2021 03:05:51 GMT',
     date: 'Tue, 12 Jan 2021 03:00:51 GMT',
     connection: 'keep-alive',
     vary: 'Accept-Encoding',
     'x-environment-context': 'prod',
     'x-application-context': 'proclubs',
     'strict-transport-security': 'max-age=86400' },
  config:
   { url:
      'https://proclubs.ea.com/api/fifa/members/stats?platform=ps4&clubId=6703918',
     method: 'get',
     headers:
      { Accept: 'application/json',
        Host: 'proclubs.ea.com',
        'Accept-Language': 'en-US,en;q=0.5',
        'Accept-Encoding': 'gzip, deflate, br',
        Origin: 'https://www.ea.com',
        Connection: 'keep-alive',
        Referer:
         ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/members?clubId=6703918&platform=ps4',
        'Content-Type': 'application/json',
        'User-Agent': 'axios/0.21.1' },
     transformRequest: [ [Function: transformRequest] ],
     transformResponse: [ [Function: transformResponse] ],
     timeout: 0,
     adapter: [Function: httpAdapter],
     xsrfCookieName: 'XSRF-TOKEN',
     xsrfHeaderName: 'X-XSRF-TOKEN',
     maxContentLength: -1,
     maxBodyLength: -1,
     validateStatus: [Function: validateStatus],
     data: undefined },
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        socket: [Function],
        abort: [Function],
        aborted: [Function],
        connect: [Function],
        error: [Function],
        timeout: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 7,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 0,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: false,
           secureContext: SecureContext { context: null, singleUse: true },
           isServer: false,
           requestCert: true,
           rejectUnauthorized: true,
           session: undefined,
           ALPNProtocols: undefined,
           requestOCSP: undefined },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'proclubs.ea.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events:
         [Object: null prototype] {
           close: [ [Function: onSocketCloseDestroySSL], [Function: onClose] ],
           end: [Function: onReadableStreamEnd],
           secure: [Function: onConnectSecure],
           free: [Function: onFree],
           agentRemove: [Function: onRemove],
           drain: [Function: ondrain],
           error:
            { [Function: bound onceWrapper] listener: [Function: freeSocketErrorListener] } },
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'proclubs.ea.com',
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           paused: false,
           emitClose: false,
           destroyed: true,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: false,
        _maxListeners: undefined,
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: false,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           destroyed: true,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           emitClose: false,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(res)]: null,
        [Symbol(asyncId)]: 25,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1527,
        [Symbol(kBytesWritten)]: 408,
        [Symbol(connect-options)]:
         { rejectUnauthorized: true,
           ciphers:
            'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
           checkServerIdentity: [Function: checkServerIdentity],
           minDHSize: 1024,
           encoding: null,
           _agentKey: 'proclubs.ea.com:443::::::::::::::::',
           host: 'proclubs.ea.com',
           search: '?platform=ps4&clubId=6703918',
           pathname: '/api/fifa/members/stats',
           nativeProtocols:
            { 'http:':
               { _connectionListener: [Function: connectionListener],
                 METHODS:
                  [ 'ACL',
                    'BIND',
                    'CHECKOUT',
                    'CONNECT',
                    'COPY',
                    'DELETE',
                    'GET',
                    'HEAD',
                    'LINK',
                    'LOCK',
                    'M-SEARCH',
                    'MERGE',
                    'MKACTIVITY',
                    'MKCALENDAR',
                    'MKCOL',
                    'MOVE',
                    'NOTIFY',
                    'OPTIONS',
                    'PATCH',
                    'POST',
                    'PROPFIND',
                    'PROPPATCH',
                    'PURGE',
                    'PUT',
                    'REBIND',
                    'REPORT',
                    'SEARCH',
                    'SOURCE',
                    'SUBSCRIBE',
                    'TRACE',
                    'UNBIND',
                    'UNLINK',
                    'UNLOCK',
                    'UNSUBSCRIBE' ],
                 STATUS_CODES:
                  { '100': 'Continue',
                    '101': 'Switching Protocols',
                    '102': 'Processing',
                    '103': 'Early Hints',
                    '200': 'OK',
                    '201': 'Created',
                    '202': 'Accepted',
                    '203': 'Non-Authoritative Information',
                    '204': 'No Content',
                    '205': 'Reset Content',
                    '206': 'Partial Content',
                    '207': 'Multi-Status',
                    '208': 'Already Reported',
                    '226': 'IM Used',
                    '300': 'Multiple Choices',
                    '301': 'Moved Permanently',
                    '302': 'Found',
                    '303': 'See Other',
                    '304': 'Not Modified',
                    '305': 'Use Proxy',
                    '307': 'Temporary Redirect',
                    '308': 'Permanent Redirect',
                    '400': 'Bad Request',
                    '401': 'Unauthorized',
                    '402': 'Payment Required',
                    '403': 'Forbidden',
                    '404': 'Not Found',
                    '405': 'Method Not Allowed',
                    '406': 'Not Acceptable',
                    '407': 'Proxy Authentication Required',
                    '408': 'Request Timeout',
                    '409': 'Conflict',
                    '410': 'Gone',
                    '411': 'Length Required',
                    '412': 'Precondition Failed',
                    '413': 'Payload Too Large',
                    '414': 'URI Too Long',
                    '415': 'Unsupported Media Type',
                    '416': 'Range Not Satisfiable',
                    '417': 'Expectation Failed',
                    '418': 'I\'m a Teapot',
                    '421': 'Misdirected Request',
                    '422': 'Unprocessable Entity',
                    '423': 'Locked',
                    '424': 'Failed Dependency',
                    '425': 'Unordered Collection',
                    '426': 'Upgrade Required',
                    '428': 'Precondition Required',
                    '429': 'Too Many Requests',
                    '431': 'Request Header Fields Too Large',
                    '451': 'Unavailable For Legal Reasons',
                    '500': 'Internal Server Error',
                    '501': 'Not Implemented',
                    '502': 'Bad Gateway',
                    '503': 'Service Unavailable',
                    '504': 'Gateway Timeout',
                    '505': 'HTTP Version Not Supported',
                    '506': 'Variant Also Negotiates',
                    '507': 'Insufficient Storage',
                    '508': 'Loop Detected',
                    '509': 'Bandwidth Limit Exceeded',
                    '510': 'Not Extended',
                    '511': 'Network Authentication Required' },
                 Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: EventEmitter]
                       EventEmitter: [Circular],
                       usingDomains: false,
                       defaultMaxListeners: [Getter/Setter],
                       init: [Function],
                       listenerCount: [Function] },
                    defaultMaxSockets: Infinity },
                 ClientRequest:
                  { [Function: ClientRequest]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 80,
                    protocol: 'http:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256 },
                 IncomingMessage:
                  { [Function: IncomingMessage]
                    super_:
                     { [Function: Readable]
                       ReadableState: [Function: ReadableState],
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable: [Circular],
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex: { [Function: Duplex] super_: [Circular] },
                          Transform:
                           { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                       _fromList: [Function: fromList] } },
                 OutgoingMessage:
                  { [Function: OutgoingMessage]
                    super_:
                     { [Function: Stream]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       Readable:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_: [Circular],
                          _fromList: [Function: fromList] },
                       Writable:
                        { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                       Duplex:
                        { [Function: Duplex]
                          super_:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] } },
                       Transform:
                        { [Function: Transform]
                          super_:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } } },
                       PassThrough:
                        { [Function: PassThrough]
                          super_:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } } },
                       pipeline: [Function: pipeline],
                       finished: [Function: eos],
                       Stream: [Circular],
                       _isUint8Array: [Function: isUint8Array],
                       _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] } } },
                 ServerResponse:
                  { [Function: ServerResponse]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request],
                 maxHeaderSize: [Getter] },
              'https:':
               { Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'proclubs.ea.com:443::::::::::::::::':
                           <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                       list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] } },
           port: 443,
           hostname: 'proclubs.ea.com',
           auth: undefined,
           agents: { http: undefined, https: undefined },
           agent: undefined,
           headers:
            { Accept: 'application/json',
              Host: 'proclubs.ea.com',
              'Accept-Language': 'en-US,en;q=0.5',
              'Accept-Encoding': 'gzip, deflate, br',
              Origin: 'https://www.ea.com',
              Connection: 'keep-alive',
              Referer:
               ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/members?clubId=6703918&platform=ps4',
              'Content-Type': 'application/json',
              'User-Agent': 'axios/0.21.1' },
           method: 'GET',
           path: null,
           protocol: 'https:',
           maxBodyLength: 10485760,
           maxRedirects: 21,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'proclubs.ea.com:443::::::::::::::::':
                     <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                 list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
           servername: 'proclubs.ea.com',
           singleUse: true } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: false,
           secureContext: SecureContext { context: null, singleUse: true },
           isServer: false,
           requestCert: true,
           rejectUnauthorized: true,
           session: undefined,
           ALPNProtocols: undefined,
           requestOCSP: undefined },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'proclubs.ea.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events:
         [Object: null prototype] {
           close: [ [Function: onSocketCloseDestroySSL], [Function: onClose] ],
           end: [Function: onReadableStreamEnd],
           secure: [Function: onConnectSecure],
           free: [Function: onFree],
           agentRemove: [Function: onRemove],
           drain: [Function: ondrain],
           error:
            { [Function: bound onceWrapper] listener: [Function: freeSocketErrorListener] } },
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'proclubs.ea.com',
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           paused: false,
           emitClose: false,
           destroyed: true,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: false,
        _maxListeners: undefined,
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: false,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           destroyed: true,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           emitClose: false,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(res)]: null,
        [Symbol(asyncId)]: 25,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1527,
        [Symbol(kBytesWritten)]: 408,
        [Symbol(connect-options)]:
         { rejectUnauthorized: true,
           ciphers:
            'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
           checkServerIdentity: [Function: checkServerIdentity],
           minDHSize: 1024,
           encoding: null,
           _agentKey: 'proclubs.ea.com:443::::::::::::::::',
           host: 'proclubs.ea.com',
           search: '?platform=ps4&clubId=6703918',
           pathname: '/api/fifa/members/stats',
           nativeProtocols:
            { 'http:':
               { _connectionListener: [Function: connectionListener],
                 METHODS:
                  [ 'ACL',
                    'BIND',
                    'CHECKOUT',
                    'CONNECT',
                    'COPY',
                    'DELETE',
                    'GET',
                    'HEAD',
                    'LINK',
                    'LOCK',
                    'M-SEARCH',
                    'MERGE',
                    'MKACTIVITY',
                    'MKCALENDAR',
                    'MKCOL',
                    'MOVE',
                    'NOTIFY',
                    'OPTIONS',
                    'PATCH',
                    'POST',
                    'PROPFIND',
                    'PROPPATCH',
                    'PURGE',
                    'PUT',
                    'REBIND',
                    'REPORT',
                    'SEARCH',
                    'SOURCE',
                    'SUBSCRIBE',
                    'TRACE',
                    'UNBIND',
                    'UNLINK',
                    'UNLOCK',
                    'UNSUBSCRIBE' ],
                 STATUS_CODES:
                  { '100': 'Continue',
                    '101': 'Switching Protocols',
                    '102': 'Processing',
                    '103': 'Early Hints',
                    '200': 'OK',
                    '201': 'Created',
                    '202': 'Accepted',
                    '203': 'Non-Authoritative Information',
                    '204': 'No Content',
                    '205': 'Reset Content',
                    '206': 'Partial Content',
                    '207': 'Multi-Status',
                    '208': 'Already Reported',
                    '226': 'IM Used',
                    '300': 'Multiple Choices',
                    '301': 'Moved Permanently',
                    '302': 'Found',
                    '303': 'See Other',
                    '304': 'Not Modified',
                    '305': 'Use Proxy',
                    '307': 'Temporary Redirect',
                    '308': 'Permanent Redirect',
                    '400': 'Bad Request',
                    '401': 'Unauthorized',
                    '402': 'Payment Required',
                    '403': 'Forbidden',
                    '404': 'Not Found',
                    '405': 'Method Not Allowed',
                    '406': 'Not Acceptable',
                    '407': 'Proxy Authentication Required',
                    '408': 'Request Timeout',
                    '409': 'Conflict',
                    '410': 'Gone',
                    '411': 'Length Required',
                    '412': 'Precondition Failed',
                    '413': 'Payload Too Large',
                    '414': 'URI Too Long',
                    '415': 'Unsupported Media Type',
                    '416': 'Range Not Satisfiable',
                    '417': 'Expectation Failed',
                    '418': 'I\'m a Teapot',
                    '421': 'Misdirected Request',
                    '422': 'Unprocessable Entity',
                    '423': 'Locked',
                    '424': 'Failed Dependency',
                    '425': 'Unordered Collection',
                    '426': 'Upgrade Required',
                    '428': 'Precondition Required',
                    '429': 'Too Many Requests',
                    '431': 'Request Header Fields Too Large',
                    '451': 'Unavailable For Legal Reasons',
                    '500': 'Internal Server Error',
                    '501': 'Not Implemented',
                    '502': 'Bad Gateway',
                    '503': 'Service Unavailable',
                    '504': 'Gateway Timeout',
                    '505': 'HTTP Version Not Supported',
                    '506': 'Variant Also Negotiates',
                    '507': 'Insufficient Storage',
                    '508': 'Loop Detected',
                    '509': 'Bandwidth Limit Exceeded',
                    '510': 'Not Extended',
                    '511': 'Network Authentication Required' },
                 Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: EventEmitter]
                       EventEmitter: [Circular],
                       usingDomains: false,
                       defaultMaxListeners: [Getter/Setter],
                       init: [Function],
                       listenerCount: [Function] },
                    defaultMaxSockets: Infinity },
                 ClientRequest:
                  { [Function: ClientRequest]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 80,
                    protocol: 'http:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256 },
                 IncomingMessage:
                  { [Function: IncomingMessage]
                    super_:
                     { [Function: Readable]
                       ReadableState: [Function: ReadableState],
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable: [Circular],
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex: { [Function: Duplex] super_: [Circular] },
                          Transform:
                           { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                       _fromList: [Function: fromList] } },
                 OutgoingMessage:
                  { [Function: OutgoingMessage]
                    super_:
                     { [Function: Stream]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       Readable:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_: [Circular],
                          _fromList: [Function: fromList] },
                       Writable:
                        { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                       Duplex:
                        { [Function: Duplex]
                          super_:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] } },
                       Transform:
                        { [Function: Transform]
                          super_:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } } },
                       PassThrough:
                        { [Function: PassThrough]
                          super_:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } } },
                       pipeline: [Function: pipeline],
                       finished: [Function: eos],
                       Stream: [Circular],
                       _isUint8Array: [Function: isUint8Array],
                       _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] } } },
                 ServerResponse:
                  { [Function: ServerResponse]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request],
                 maxHeaderSize: [Getter] },
              'https:':
               { Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'proclubs.ea.com:443::::::::::::::::':
                           <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                       list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] } },
           port: 443,
           hostname: 'proclubs.ea.com',
           auth: undefined,
           agents: { http: undefined, https: undefined },
           agent: undefined,
           headers:
            { Accept: 'application/json',
              Host: 'proclubs.ea.com',
              'Accept-Language': 'en-US,en;q=0.5',
              'Accept-Encoding': 'gzip, deflate, br',
              Origin: 'https://www.ea.com',
              Connection: 'keep-alive',
              Referer:
               ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/members?clubId=6703918&platform=ps4',
              'Content-Type': 'application/json',
              'User-Agent': 'axios/0.21.1' },
           method: 'GET',
           path: null,
           protocol: 'https:',
           maxBodyLength: 10485760,
           maxRedirects: 21,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'proclubs.ea.com:443::::::::::::::::':
                     <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                 list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
           servername: 'proclubs.ea.com',
           singleUse: true } },
     _header:
      'GET /api/fifa/members/stats?platform=ps4&clubId=6703918 HTTP/1.1\r\nAccept: application/json\r\nHost: proclubs.ea.com\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nOrigin: https://www.ea.com\r\nConnection: keep-alive\r\nReferer:  https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/members?clubId=6703918&platform=ps4\r\nContent-Type: application/json\r\nUser-Agent: axios/0.21.1\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object: null prototype] { free: [Function] },
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: { path: null },
        requests: {},
        sockets: {},
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        maxCachedSessions: 100,
        _sessionCache:
         { map:
            { 'proclubs.ea.com:443::::::::::::::::':
               <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
           list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
     socketPath: undefined,
     timeout: undefined,
     method: 'GET',
     path: '/api/fifa/members/stats?platform=ps4&clubId=6703918',
     _ended: true,
     res:
      IncomingMessage {
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: false,
           ended: true,
           endEmitted: true,
           reading: false,
           sync: true,
           needReadable: false,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           paused: false,
           emitClose: true,
           destroyed: false,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: true,
           decoder: null,
           encoding: null },
        readable: false,
        _events: [Object: null prototype] { end: [Function: responseOnEnd] },
        _eventsCount: 1,
        _maxListeners: undefined,
        socket:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: null, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session: undefined,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: 'proclubs.ea.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close: [ [Function: onSocketCloseDestroySSL], [Function: onClose] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error:
               { [Function: bound onceWrapper] listener: [Function: freeSocketErrorListener] } },
           _eventsCount: 7,
           connecting: false,
           _hadError: false,
           _handle: null,
           _parent: null,
           _host: 'proclubs.ea.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              paused: false,
              emitClose: false,
              destroyed: true,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: false,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: true,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl: null,
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           [Symbol(res)]: null,
           [Symbol(asyncId)]: 25,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 1527,
           [Symbol(kBytesWritten)]: 408,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              encoding: null,
              _agentKey: 'proclubs.ea.com:443::::::::::::::::',
              host: 'proclubs.ea.com',
              search: '?platform=ps4&clubId=6703918',
              pathname: '/api/fifa/members/stats',
              nativeProtocols:
               { 'http:':
                  { _connectionListener: [Function: connectionListener],
                    METHODS:
                     [ 'ACL',
                       'BIND',
                       'CHECKOUT',
                       'CONNECT',
                       'COPY',
                       'DELETE',
                       'GET',
                       'HEAD',
                       'LINK',
                       'LOCK',
                       'M-SEARCH',
                       'MERGE',
                       'MKACTIVITY',
                       'MKCALENDAR',
                       'MKCOL',
                       'MOVE',
                       'NOTIFY',
                       'OPTIONS',
                       'PATCH',
                       'POST',
                       'PROPFIND',
                       'PROPPATCH',
                       'PURGE',
                       'PUT',
                       'REBIND',
                       'REPORT',
                       'SEARCH',
                       'SOURCE',
                       'SUBSCRIBE',
                       'TRACE',
                       'UNBIND',
                       'UNLINK',
                       'UNLOCK',
                       'UNSUBSCRIBE' ],
                    STATUS_CODES:
                     { '100': 'Continue',
                       '101': 'Switching Protocols',
                       '102': 'Processing',
                       '103': 'Early Hints',
                       '200': 'OK',
                       '201': 'Created',
                       '202': 'Accepted',
                       '203': 'Non-Authoritative Information',
                       '204': 'No Content',
                       '205': 'Reset Content',
                       '206': 'Partial Content',
                       '207': 'Multi-Status',
                       '208': 'Already Reported',
                       '226': 'IM Used',
                       '300': 'Multiple Choices',
                       '301': 'Moved Permanently',
                       '302': 'Found',
                       '303': 'See Other',
                       '304': 'Not Modified',
                       '305': 'Use Proxy',
                       '307': 'Temporary Redirect',
                       '308': 'Permanent Redirect',
                       '400': 'Bad Request',
                       '401': 'Unauthorized',
                       '402': 'Payment Required',
                       '403': 'Forbidden',
                       '404': 'Not Found',
                       '405': 'Method Not Allowed',
                       '406': 'Not Acceptable',
                       '407': 'Proxy Authentication Required',
                       '408': 'Request Timeout',
                       '409': 'Conflict',
                       '410': 'Gone',
                       '411': 'Length Required',
                       '412': 'Precondition Failed',
                       '413': 'Payload Too Large',
                       '414': 'URI Too Long',
                       '415': 'Unsupported Media Type',
                       '416': 'Range Not Satisfiable',
                       '417': 'Expectation Failed',
                       '418': 'I\'m a Teapot',
                       '421': 'Misdirected Request',
                       '422': 'Unprocessable Entity',
                       '423': 'Locked',
                       '424': 'Failed Dependency',
                       '425': 'Unordered Collection',
                       '426': 'Upgrade Required',
                       '428': 'Precondition Required',
                       '429': 'Too Many Requests',
                       '431': 'Request Header Fields Too Large',
                       '451': 'Unavailable For Legal Reasons',
                       '500': 'Internal Server Error',
                       '501': 'Not Implemented',
                       '502': 'Bad Gateway',
                       '503': 'Service Unavailable',
                       '504': 'Gateway Timeout',
                       '505': 'HTTP Version Not Supported',
                       '506': 'Variant Also Negotiates',
                       '507': 'Insufficient Storage',
                       '508': 'Loop Detected',
                       '509': 'Bandwidth Limit Exceeded',
                       '510': 'Not Extended',
                       '511': 'Network Authentication Required' },
                    Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity },
                    ClientRequest:
                     { [Function: ClientRequest]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 80,
                       protocol: 'http:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256 },
                    IncomingMessage:
                     { [Function: IncomingMessage]
                       super_:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable: [Circular],
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex: { [Function: Duplex] super_: [Circular] },
                             Transform:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                          _fromList: [Function: fromList] } },
                    OutgoingMessage:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } },
                    ServerResponse:
                     { [Function: ServerResponse]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request],
                    maxHeaderSize: [Getter] },
                 'https:':
                  { Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: Agent]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          defaultMaxSockets: Infinity } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'proclubs.ea.com:443::::::::::::::::':
                              <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                          list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: Server]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] } } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] } },
              port: 443,
              hostname: 'proclubs.ea.com',
              auth: undefined,
              agents: { http: undefined, https: undefined },
              agent: undefined,
              headers:
               { Accept: 'application/json',
                 Host: 'proclubs.ea.com',
                 'Accept-Language': 'en-US,en;q=0.5',
                 'Accept-Encoding': 'gzip, deflate, br',
                 Origin: 'https://www.ea.com',
                 Connection: 'keep-alive',
                 Referer:
                  ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/members?clubId=6703918&platform=ps4',
                 'Content-Type': 'application/json',
                 'User-Agent': 'axios/0.21.1' },
              method: 'GET',
              path: null,
              protocol: 'https:',
              maxBodyLength: 10485760,
              maxRedirects: 21,
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: {},
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'proclubs.ea.com:443::::::::::::::::':
                        <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                    list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
              servername: 'proclubs.ea.com',
              singleUse: true } },
        connection:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: null, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session: undefined,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: 'proclubs.ea.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close: [ [Function: onSocketCloseDestroySSL], [Function: onClose] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error:
               { [Function: bound onceWrapper] listener: [Function: freeSocketErrorListener] } },
           _eventsCount: 7,
           connecting: false,
           _hadError: false,
           _handle: null,
           _parent: null,
           _host: 'proclubs.ea.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              paused: false,
              emitClose: false,
              destroyed: true,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: false,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: true,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl: null,
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           [Symbol(res)]: null,
           [Symbol(asyncId)]: 25,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 1527,
           [Symbol(kBytesWritten)]: 408,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              encoding: null,
              _agentKey: 'proclubs.ea.com:443::::::::::::::::',
              host: 'proclubs.ea.com',
              search: '?platform=ps4&clubId=6703918',
              pathname: '/api/fifa/members/stats',
              nativeProtocols:
               { 'http:':
                  { _connectionListener: [Function: connectionListener],
                    METHODS:
                     [ 'ACL',
                       'BIND',
                       'CHECKOUT',
                       'CONNECT',
                       'COPY',
                       'DELETE',
                       'GET',
                       'HEAD',
                       'LINK',
                       'LOCK',
                       'M-SEARCH',
                       'MERGE',
                       'MKACTIVITY',
                       'MKCALENDAR',
                       'MKCOL',
                       'MOVE',
                       'NOTIFY',
                       'OPTIONS',
                       'PATCH',
                       'POST',
                       'PROPFIND',
                       'PROPPATCH',
                       'PURGE',
                       'PUT',
                       'REBIND',
                       'REPORT',
                       'SEARCH',
                       'SOURCE',
                       'SUBSCRIBE',
                       'TRACE',
                       'UNBIND',
                       'UNLINK',
                       'UNLOCK',
                       'UNSUBSCRIBE' ],
                    STATUS_CODES:
                     { '100': 'Continue',
                       '101': 'Switching Protocols',
                       '102': 'Processing',
                       '103': 'Early Hints',
                       '200': 'OK',
                       '201': 'Created',
                       '202': 'Accepted',
                       '203': 'Non-Authoritative Information',
                       '204': 'No Content',
                       '205': 'Reset Content',
                       '206': 'Partial Content',
                       '207': 'Multi-Status',
                       '208': 'Already Reported',
                       '226': 'IM Used',
                       '300': 'Multiple Choices',
                       '301': 'Moved Permanently',
                       '302': 'Found',
                       '303': 'See Other',
                       '304': 'Not Modified',
                       '305': 'Use Proxy',
                       '307': 'Temporary Redirect',
                       '308': 'Permanent Redirect',
                       '400': 'Bad Request',
                       '401': 'Unauthorized',
                       '402': 'Payment Required',
                       '403': 'Forbidden',
                       '404': 'Not Found',
                       '405': 'Method Not Allowed',
                       '406': 'Not Acceptable',
                       '407': 'Proxy Authentication Required',
                       '408': 'Request Timeout',
                       '409': 'Conflict',
                       '410': 'Gone',
                       '411': 'Length Required',
                       '412': 'Precondition Failed',
                       '413': 'Payload Too Large',
                       '414': 'URI Too Long',
                       '415': 'Unsupported Media Type',
                       '416': 'Range Not Satisfiable',
                       '417': 'Expectation Failed',
                       '418': 'I\'m a Teapot',
                       '421': 'Misdirected Request',
                       '422': 'Unprocessable Entity',
                       '423': 'Locked',
                       '424': 'Failed Dependency',
                       '425': 'Unordered Collection',
                       '426': 'Upgrade Required',
                       '428': 'Precondition Required',
                       '429': 'Too Many Requests',
                       '431': 'Request Header Fields Too Large',
                       '451': 'Unavailable For Legal Reasons',
                       '500': 'Internal Server Error',
                       '501': 'Not Implemented',
                       '502': 'Bad Gateway',
                       '503': 'Service Unavailable',
                       '504': 'Gateway Timeout',
                       '505': 'HTTP Version Not Supported',
                       '506': 'Variant Also Negotiates',
                       '507': 'Insufficient Storage',
                       '508': 'Loop Detected',
                       '509': 'Bandwidth Limit Exceeded',
                       '510': 'Not Extended',
                       '511': 'Network Authentication Required' },
                    Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity },
                    ClientRequest:
                     { [Function: ClientRequest]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 80,
                       protocol: 'http:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256 },
                    IncomingMessage:
                     { [Function: IncomingMessage]
                       super_:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable: [Circular],
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex: { [Function: Duplex] super_: [Circular] },
                             Transform:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                          _fromList: [Function: fromList] } },
                    OutgoingMessage:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } },
                    ServerResponse:
                     { [Function: ServerResponse]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request],
                    maxHeaderSize: [Getter] },
                 'https:':
                  { Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: Agent]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          defaultMaxSockets: Infinity } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'proclubs.ea.com:443::::::::::::::::':
                              <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                          list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: Server]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] } } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] } },
              port: 443,
              hostname: 'proclubs.ea.com',
              auth: undefined,
              agents: { http: undefined, https: undefined },
              agent: undefined,
              headers:
               { Accept: 'application/json',
                 Host: 'proclubs.ea.com',
                 'Accept-Language': 'en-US,en;q=0.5',
                 'Accept-Encoding': 'gzip, deflate, br',
                 Origin: 'https://www.ea.com',
                 Connection: 'keep-alive',
                 Referer:
                  ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/members?clubId=6703918&platform=ps4',
                 'Content-Type': 'application/json',
                 'User-Agent': 'axios/0.21.1' },
              method: 'GET',
              path: null,
              protocol: 'https:',
              maxBodyLength: 10485760,
              maxRedirects: 21,
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: {},
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'proclubs.ea.com:443::::::::::::::::':
                        <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                    list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
              servername: 'proclubs.ea.com',
              singleUse: true } },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers:
         { 'content-type': 'application/json',
           server: 'nginx',
           'referrer-policy': 'origin-when-cross-origin, strict-origin-when-cross-origin',
           'x-frame-options': 'DENY',
           'x-xss-protection': '1; mode=block',
           'x-content-type-options': 'nosniff',
           'content-security-policy': 'default-src \'self\'',
           'access-control-allow-origin': 'https://www.ea.com',
           'access-control-allow-credentials': 'true',
           'x-permitted-cross-domain-policies': 'master-only',
           'content-length': '813',
           'cache-control': 'max-age=300',
           expires: 'Tue, 12 Jan 2021 03:05:51 GMT',
           date: 'Tue, 12 Jan 2021 03:00:51 GMT',
           connection: 'keep-alive',
           vary: 'Accept-Encoding',
           'x-environment-context': 'prod',
           'x-application-context': 'proclubs',
           'strict-transport-security': 'max-age=86400' },
        rawHeaders:
         [ 'Content-Type',
           'application/json',
           'Server',
           'nginx',
           'Referrer-Policy',
           'origin-when-cross-origin, strict-origin-when-cross-origin',
           'X-Frame-Options',
           'DENY',
           'X-XSS-Protection',
           '1; mode=block',
           'X-Content-Type-Options',
           'nosniff',
           'Content-Security-Policy',
           'default-src \'self\'',
           'Access-Control-Allow-Origin',
           'https://www.ea.com',
           'Access-Control-Allow-Credentials',
           'true',
           'X-Permitted-Cross-Domain-Policies',
           'master-only',
           'Content-Encoding',
           'gzip',
           'Content-Length',
           '813',
           'Cache-Control',
           'max-age=300',
           'Expires',
           'Tue, 12 Jan 2021 03:05:51 GMT',
           'Date',
           'Tue, 12 Jan 2021 03:00:51 GMT',
           'Connection',
           'keep-alive',
           'Vary',
           'Accept-Encoding',
           'X-Environment-Context',
           'prod',
           'X-Application-Context',
           'proclubs',
           'Strict-Transport-Security',
           'max-age=86400' ],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: null, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session: undefined,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: 'proclubs.ea.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close: [ [Function: onSocketCloseDestroySSL], [Function: onClose] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error:
               { [Function: bound onceWrapper] listener: [Function: freeSocketErrorListener] } },
           _eventsCount: 7,
           connecting: false,
           _hadError: false,
           _handle: null,
           _parent: null,
           _host: 'proclubs.ea.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              paused: false,
              emitClose: false,
              destroyed: true,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: false,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: true,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl: null,
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           [Symbol(res)]: null,
           [Symbol(asyncId)]: 25,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 1527,
           [Symbol(kBytesWritten)]: 408,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              encoding: null,
              _agentKey: 'proclubs.ea.com:443::::::::::::::::',
              host: 'proclubs.ea.com',
              search: '?platform=ps4&clubId=6703918',
              pathname: '/api/fifa/members/stats',
              nativeProtocols:
               { 'http:':
                  { _connectionListener: [Function: connectionListener],
                    METHODS:
                     [ 'ACL',
                       'BIND',
                       'CHECKOUT',
                       'CONNECT',
                       'COPY',
                       'DELETE',
                       'GET',
                       'HEAD',
                       'LINK',
                       'LOCK',
                       'M-SEARCH',
                       'MERGE',
                       'MKACTIVITY',
                       'MKCALENDAR',
                       'MKCOL',
                       'MOVE',
                       'NOTIFY',
                       'OPTIONS',
                       'PATCH',
                       'POST',
                       'PROPFIND',
                       'PROPPATCH',
                       'PURGE',
                       'PUT',
                       'REBIND',
                       'REPORT',
                       'SEARCH',
                       'SOURCE',
                       'SUBSCRIBE',
                       'TRACE',
                       'UNBIND',
                       'UNLINK',
                       'UNLOCK',
                       'UNSUBSCRIBE' ],
                    STATUS_CODES:
                     { '100': 'Continue',
                       '101': 'Switching Protocols',
                       '102': 'Processing',
                       '103': 'Early Hints',
                       '200': 'OK',
                       '201': 'Created',
                       '202': 'Accepted',
                       '203': 'Non-Authoritative Information',
                       '204': 'No Content',
                       '205': 'Reset Content',
                       '206': 'Partial Content',
                       '207': 'Multi-Status',
                       '208': 'Already Reported',
                       '226': 'IM Used',
                       '300': 'Multiple Choices',
                       '301': 'Moved Permanently',
                       '302': 'Found',
                       '303': 'See Other',
                       '304': 'Not Modified',
                       '305': 'Use Proxy',
                       '307': 'Temporary Redirect',
                       '308': 'Permanent Redirect',
                       '400': 'Bad Request',
                       '401': 'Unauthorized',
                       '402': 'Payment Required',
                       '403': 'Forbidden',
                       '404': 'Not Found',
                       '405': 'Method Not Allowed',
                       '406': 'Not Acceptable',
                       '407': 'Proxy Authentication Required',
                       '408': 'Request Timeout',
                       '409': 'Conflict',
                       '410': 'Gone',
                       '411': 'Length Required',
                       '412': 'Precondition Failed',
                       '413': 'Payload Too Large',
                       '414': 'URI Too Long',
                       '415': 'Unsupported Media Type',
                       '416': 'Range Not Satisfiable',
                       '417': 'Expectation Failed',
                       '418': 'I\'m a Teapot',
                       '421': 'Misdirected Request',
                       '422': 'Unprocessable Entity',
                       '423': 'Locked',
                       '424': 'Failed Dependency',
                       '425': 'Unordered Collection',
                       '426': 'Upgrade Required',
                       '428': 'Precondition Required',
                       '429': 'Too Many Requests',
                       '431': 'Request Header Fields Too Large',
                       '451': 'Unavailable For Legal Reasons',
                       '500': 'Internal Server Error',
                       '501': 'Not Implemented',
                       '502': 'Bad Gateway',
                       '503': 'Service Unavailable',
                       '504': 'Gateway Timeout',
                       '505': 'HTTP Version Not Supported',
                       '506': 'Variant Also Negotiates',
                       '507': 'Insufficient Storage',
                       '508': 'Loop Detected',
                       '509': 'Bandwidth Limit Exceeded',
                       '510': 'Not Extended',
                       '511': 'Network Authentication Required' },
                    Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity },
                    ClientRequest:
                     { [Function: ClientRequest]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 80,
                       protocol: 'http:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256 },
                    IncomingMessage:
                     { [Function: IncomingMessage]
                       super_:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable: [Circular],
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex: { [Function: Duplex] super_: [Circular] },
                             Transform:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                          _fromList: [Function: fromList] } },
                    OutgoingMessage:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } },
                    ServerResponse:
                     { [Function: ServerResponse]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request],
                    maxHeaderSize: [Getter] },
                 'https:':
                  { Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: Agent]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          defaultMaxSockets: Infinity } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'proclubs.ea.com:443::::::::::::::::':
                              <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                          list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: Server]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] } } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] } },
              port: 443,
              hostname: 'proclubs.ea.com',
              auth: undefined,
              agents: { http: undefined, https: undefined },
              agent: undefined,
              headers:
               { Accept: 'application/json',
                 Host: 'proclubs.ea.com',
                 'Accept-Language': 'en-US,en;q=0.5',
                 'Accept-Encoding': 'gzip, deflate, br',
                 Origin: 'https://www.ea.com',
                 Connection: 'keep-alive',
                 Referer:
                  ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/members?clubId=6703918&platform=ps4',
                 'Content-Type': 'application/json',
                 'User-Agent': 'axios/0.21.1' },
              method: 'GET',
              path: null,
              protocol: 'https:',
              maxBodyLength: 10485760,
              maxRedirects: 21,
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: {},
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'proclubs.ea.com:443::::::::::::::::':
                        <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                    list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
              servername: 'proclubs.ea.com',
              singleUse: true } },
        _consuming: false,
        _dumped: false,
        req: [Circular],
        responseUrl:
         'https://proclubs.ea.com/api/fifa/members/stats?platform=ps4&clubId=6703918',
        redirects: [] },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     _redirectable:
      Writable {
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: false,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           destroyed: false,
           decodeStrings: true,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: true,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           emitClose: true,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: true,
        _events:
         [Object: null prototype] {
           response: [Function: handleResponse],
           error: [Function: handleRequestError] },
        _eventsCount: 2,
        _maxListeners: undefined,
        _options:
         { maxRedirects: 21,
           maxBodyLength: 10485760,
           protocol: 'https:',
           path: '/api/fifa/members/stats?platform=ps4&clubId=6703918',
           method: 'GET',
           headers:
            { Accept: 'application/json',
              Host: 'proclubs.ea.com',
              'Accept-Language': 'en-US,en;q=0.5',
              'Accept-Encoding': 'gzip, deflate, br',
              Origin: 'https://www.ea.com',
              Connection: 'keep-alive',
              Referer:
               ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/members?clubId=6703918&platform=ps4',
              'Content-Type': 'application/json',
              'User-Agent': 'axios/0.21.1' },
           agent: undefined,
           agents: { http: undefined, https: undefined },
           auth: undefined,
           hostname: 'proclubs.ea.com',
           port: null,
           nativeProtocols:
            { 'http:':
               { _connectionListener: [Function: connectionListener],
                 METHODS:
                  [ 'ACL',
                    'BIND',
                    'CHECKOUT',
                    'CONNECT',
                    'COPY',
                    'DELETE',
                    'GET',
                    'HEAD',
                    'LINK',
                    'LOCK',
                    'M-SEARCH',
                    'MERGE',
                    'MKACTIVITY',
                    'MKCALENDAR',
                    'MKCOL',
                    'MOVE',
                    'NOTIFY',
                    'OPTIONS',
                    'PATCH',
                    'POST',
                    'PROPFIND',
                    'PROPPATCH',
                    'PURGE',
                    'PUT',
                    'REBIND',
                    'REPORT',
                    'SEARCH',
                    'SOURCE',
                    'SUBSCRIBE',
                    'TRACE',
                    'UNBIND',
                    'UNLINK',
                    'UNLOCK',
                    'UNSUBSCRIBE' ],
                 STATUS_CODES:
                  { '100': 'Continue',
                    '101': 'Switching Protocols',
                    '102': 'Processing',
                    '103': 'Early Hints',
                    '200': 'OK',
                    '201': 'Created',
                    '202': 'Accepted',
                    '203': 'Non-Authoritative Information',
                    '204': 'No Content',
                    '205': 'Reset Content',
                    '206': 'Partial Content',
                    '207': 'Multi-Status',
                    '208': 'Already Reported',
                    '226': 'IM Used',
                    '300': 'Multiple Choices',
                    '301': 'Moved Permanently',
                    '302': 'Found',
                    '303': 'See Other',
                    '304': 'Not Modified',
                    '305': 'Use Proxy',
                    '307': 'Temporary Redirect',
                    '308': 'Permanent Redirect',
                    '400': 'Bad Request',
                    '401': 'Unauthorized',
                    '402': 'Payment Required',
                    '403': 'Forbidden',
                    '404': 'Not Found',
                    '405': 'Method Not Allowed',
                    '406': 'Not Acceptable',
                    '407': 'Proxy Authentication Required',
                    '408': 'Request Timeout',
                    '409': 'Conflict',
                    '410': 'Gone',
                    '411': 'Length Required',
                    '412': 'Precondition Failed',
                    '413': 'Payload Too Large',
                    '414': 'URI Too Long',
                    '415': 'Unsupported Media Type',
                    '416': 'Range Not Satisfiable',
                    '417': 'Expectation Failed',
                    '418': 'I\'m a Teapot',
                    '421': 'Misdirected Request',
                    '422': 'Unprocessable Entity',
                    '423': 'Locked',
                    '424': 'Failed Dependency',
                    '425': 'Unordered Collection',
                    '426': 'Upgrade Required',
                    '428': 'Precondition Required',
                    '429': 'Too Many Requests',
                    '431': 'Request Header Fields Too Large',
                    '451': 'Unavailable For Legal Reasons',
                    '500': 'Internal Server Error',
                    '501': 'Not Implemented',
                    '502': 'Bad Gateway',
                    '503': 'Service Unavailable',
                    '504': 'Gateway Timeout',
                    '505': 'HTTP Version Not Supported',
                    '506': 'Variant Also Negotiates',
                    '507': 'Insufficient Storage',
                    '508': 'Loop Detected',
                    '509': 'Bandwidth Limit Exceeded',
                    '510': 'Not Extended',
                    '511': 'Network Authentication Required' },
                 Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: EventEmitter]
                       EventEmitter: [Circular],
                       usingDomains: false,
                       defaultMaxListeners: [Getter/Setter],
                       init: [Function],
                       listenerCount: [Function] },
                    defaultMaxSockets: Infinity },
                 ClientRequest:
                  { [Function: ClientRequest]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 80,
                    protocol: 'http:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256 },
                 IncomingMessage:
                  { [Function: IncomingMessage]
                    super_:
                     { [Function: Readable]
                       ReadableState: [Function: ReadableState],
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable: [Circular],
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex: { [Function: Duplex] super_: [Circular] },
                          Transform:
                           { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                       _fromList: [Function: fromList] } },
                 OutgoingMessage:
                  { [Function: OutgoingMessage]
                    super_:
                     { [Function: Stream]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       Readable:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_: [Circular],
                          _fromList: [Function: fromList] },
                       Writable:
                        { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                       Duplex:
                        { [Function: Duplex]
                          super_:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] } },
                       Transform:
                        { [Function: Transform]
                          super_:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } } },
                       PassThrough:
                        { [Function: PassThrough]
                          super_:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } } },
                       pipeline: [Function: pipeline],
                       finished: [Function: eos],
                       Stream: [Circular],
                       _isUint8Array: [Function: isUint8Array],
                       _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] } } },
                 ServerResponse:
                  { [Function: ServerResponse]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request],
                 maxHeaderSize: [Getter] },
              'https:':
               { Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'proclubs.ea.com:443::::::::::::::::':
                           <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 6d e8 c6 51 44 2e 64 76 29 05 0f ce eb 79 f2 a7 d0 8c 8c a0 2b 96 bf 6e 03 41 85 bd 99 46 fd 18 04 ... > },
                       list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] } },
           pathname: '/api/fifa/members/stats',
           search: '?platform=ps4&clubId=6703918' },
        _ended: true,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 0,
        _requestBodyBuffers: [],
        _onNativeResponse: [Function],
        _currentRequest: [Circular],
        _currentUrl:
         'https://proclubs.ea.com/api/fifa/members/stats?platform=ps4&clubId=6703918' },
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        accept: [ 'Accept', 'application/json' ],
        host: [ 'Host', 'proclubs.ea.com' ],
        'accept-language': [ 'Accept-Language', 'en-US,en;q=0.5' ],
        'accept-encoding': [ 'Accept-Encoding', 'gzip, deflate, br' ],
        origin: [ 'Origin', 'https://www.ea.com' ],
        connection: [ 'Connection', 'keep-alive' ],
        referer:
         [ 'Referer',
           ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/members?clubId=6703918&platform=ps4' ],
        'content-type': [ 'Content-Type', 'application/json' ],
        'user-agent': [ 'User-Agent', 'axios/0.21.1' ] } },
  data:
   { members:
      [ { name: 'bastospereira',
          gamesPlayed: '240',
          winRate: '52',
          goals: '168',
          assists: '207',
          cleanSheetsDef: '0',
          cleanSheetsGK: '0',
          shotSuccessRate: '31',
          passesMade: '9996',
          passSuccessRate: '85',
          tacklesMade: '731',
          tackleSuccessRate: '29',
          proName: 'Nicotina',
          proPos: '25',
          proStyle: '-1',
          proHeight: '170',
          proNationality: '61',
          proOverall: '88',
          manOfTheMatch: '57',
          redCards: '3',
          favoritePosition: 'forward' },
        { name: 'Lamounier1892',
          gamesPlayed: '6',
          winRate: '50',
          goals: '1',
          assists: '1',
          cleanSheetsDef: '0',
          cleanSheetsGK: '0',
          shotSuccessRate: '10',
          passesMade: '58',
          passSuccessRate: '78',
          tacklesMade: '2',
          tackleSuccessRate: '33',
          proName: 'B. Lolo',
          proPos: '25',
          proStyle: '-1',
          proHeight: '160',
          proNationality: '63',
          proOverall: '82',
          manOfTheMatch: '0',
          redCards: '0',
          favoritePosition: 'forward' },
        { name: 'Pedro_H77',
          gamesPlayed: '251',
          winRate: '51',
          goals: '161',
          assists: '182',
          cleanSheetsDef: '0',
          cleanSheetsGK: '0',
          shotSuccessRate: '27',
          passesMade: '12824',
          passSuccessRate: '83',
          tacklesMade: '1095',
          tackleSuccessRate: '34',
          proName: 'Banjo',
          proPos: '25',
          proStyle: '-1',
          proHeight: '167',
          proNationality: '54',
          proOverall: '88',
          manOfTheMatch: '23',
          redCards: '4',
          favoritePosition: 'forward' },
        { name: 'GuiHenrik97',
          gamesPlayed: '25',
          winRate: '52',
          goals: '13',
          assists: '7',
          cleanSheetsDef: '0',
          cleanSheetsGK: '0',
          shotSuccessRate: '27',
          passesMade: '243',
          passSuccessRate: '77',
          tacklesMade: '14',
          tackleSuccessRate: '18',
          proName: 'Guilherme',
          proPos: '27',
          proStyle: '-1',
          proHeight: '175',
          proNationality: '54',
          proOverall: '86',
          manOfTheMatch: '1',
          redCards: '0',
          favoritePosition: 'forward' },
        { name: 'ThePedroso',
          gamesPlayed: '186',
          winRate: '52',
          goals: '108',
          assists: '63',
          cleanSheetsDef: '0',
          cleanSheetsGK: '0',
          shotSuccessRate: '27',
          passesMade: '1944',
          passSuccessRate: '80',
          tacklesMade: '112',
          tackleSuccessRate: '20',
          proName: 'Lepre',
          proPos: '18',
          proStyle: '-1',
          proHeight: '170',
          proNationality: '42',
          proOverall: '88',
          manOfTheMatch: '27',
          redCards: '0',
          favoritePosition: 'midfielder' },
        { name: 'mbz-WolvesGL',
          gamesPlayed: '21',
          winRate: '52',
          goals: '7',
          assists: '2',
          cleanSheetsDef: '0',
          cleanSheetsGK: '0',
          shotSuccessRate: '25',
          passesMade: '166',
          passSuccessRate: '81',
          tacklesMade: '16',
          tackleSuccessRate: '9',
          proName: 'Keno',
          proPos: '18',
          proStyle: '7',
          proHeight: '175',
          proNationality: '70',
          proOverall: '83',
          manOfTheMatch: '1',
          redCards: '0',
          favoritePosition: 'midfielder' },
        { name: 'El_Wandershow',
          gamesPlayed: '150',
          winRate: '54',
          goals: '140',
          assists: '42',
          cleanSheetsDef: '0',
          cleanSheetsGK: '0',
          shotSuccessRate: '36',
          passesMade: '1053',
          passSuccessRate: '79',
          tacklesMade: '86',
          tackleSuccessRate: '17',
          proName: 'Sins',
          proPos: '21',
          proStyle: '-1',
          proHeight: '174',
          proNationality: '95',
          proOverall: '90',
          manOfTheMatch: '32',
          redCards: '0',
          favoritePosition: 'forward' } ],
     positionCount: { midfielder: 2, goalkeeper: 0, forward: 5, defender: 0 } } }


warn [Tue Jan 12 2021 20:02:45 GMT-0200 (GMT-02:00)]  { status: 200,
  statusText: 'OK',
  headers:
   { 'content-type': 'application/json',
     server: 'nginx',
     'referrer-policy': 'origin-when-cross-origin, strict-origin-when-cross-origin',
     'x-frame-options': 'DENY',
     'x-xss-protection': '1; mode=block',
     'x-content-type-options': 'nosniff',
     'content-security-policy': 'default-src \'self\'',
     'access-control-allow-origin': 'https://www.ea.com',
     'access-control-allow-credentials': 'true',
     'x-permitted-cross-domain-policies': 'master-only',
     'content-length': '5896',
     'cache-control': 'max-age=138',
     expires: 'Tue, 12 Jan 2021 22:05:05 GMT',
     date: 'Tue, 12 Jan 2021 22:02:47 GMT',
     connection: 'keep-alive',
     vary: 'Accept-Encoding',
     'x-environment-context': 'prod',
     'x-application-context': 'proclubs',
     'strict-transport-security': 'max-age=86400' },
  config:
   { url:
      'https://proclubs.ea.com/api/fifa/clubs/matches?matchType=gameType9&platform=ps4&clubIds=6703918',
     method: 'get',
     headers:
      { Accept: 'application/json',
        Host: 'proclubs.ea.com',
        'Accept-Language': 'en-US,en;q=0.5',
        'Accept-Encoding': 'gzip, deflate, br',
        Origin: 'https://www.ea.com',
        Connection: 'keep-alive',
        Referer:
         ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/match-history?clubId=6703918&platform=ps4',
        'Content-Type': 'application/json',
        'User-Agent': 'axios/0.21.1' },
     transformRequest: [ [Function: transformRequest] ],
     transformResponse: [ [Function: transformResponse] ],
     timeout: 0,
     adapter: [Function: httpAdapter],
     xsrfCookieName: 'XSRF-TOKEN',
     xsrfHeaderName: 'X-XSRF-TOKEN',
     maxContentLength: -1,
     maxBodyLength: -1,
     validateStatus: [Function: validateStatus],
     data: undefined },
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        socket: [Function],
        abort: [Function],
        aborted: [Function],
        connect: [Function],
        error: [Function],
        timeout: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 7,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 0,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: false,
           secureContext: SecureContext { context: null, singleUse: true },
           isServer: false,
           requestCert: true,
           rejectUnauthorized: true,
           session: undefined,
           ALPNProtocols: undefined,
           requestOCSP: undefined },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'proclubs.ea.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events:
         [Object: null prototype] {
           close: [ [Function: onSocketCloseDestroySSL], [Function: onClose] ],
           end: [Function: onReadableStreamEnd],
           secure: [Function: onConnectSecure],
           free: [Function: onFree],
           agentRemove: [Function: onRemove],
           drain: [Function: ondrain],
           error:
            { [Function: bound onceWrapper] listener: [Function: freeSocketErrorListener] } },
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'proclubs.ea.com',
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           paused: false,
           emitClose: false,
           destroyed: true,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: false,
        _maxListeners: undefined,
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: false,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           destroyed: true,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           emitClose: false,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(res)]: null,
        [Symbol(asyncId)]: 25,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 6611,
        [Symbol(kBytesWritten)]: 435,
        [Symbol(connect-options)]:
         { rejectUnauthorized: true,
           ciphers:
            'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
           checkServerIdentity: [Function: checkServerIdentity],
           minDHSize: 1024,
           encoding: null,
           _agentKey: 'proclubs.ea.com:443::::::::::::::::',
           host: 'proclubs.ea.com',
           search: '?matchType=gameType9&platform=ps4&clubIds=6703918',
           pathname: '/api/fifa/clubs/matches',
           nativeProtocols:
            { 'http:':
               { _connectionListener: [Function: connectionListener],
                 METHODS:
                  [ 'ACL',
                    'BIND',
                    'CHECKOUT',
                    'CONNECT',
                    'COPY',
                    'DELETE',
                    'GET',
                    'HEAD',
                    'LINK',
                    'LOCK',
                    'M-SEARCH',
                    'MERGE',
                    'MKACTIVITY',
                    'MKCALENDAR',
                    'MKCOL',
                    'MOVE',
                    'NOTIFY',
                    'OPTIONS',
                    'PATCH',
                    'POST',
                    'PROPFIND',
                    'PROPPATCH',
                    'PURGE',
                    'PUT',
                    'REBIND',
                    'REPORT',
                    'SEARCH',
                    'SOURCE',
                    'SUBSCRIBE',
                    'TRACE',
                    'UNBIND',
                    'UNLINK',
                    'UNLOCK',
                    'UNSUBSCRIBE' ],
                 STATUS_CODES:
                  { '100': 'Continue',
                    '101': 'Switching Protocols',
                    '102': 'Processing',
                    '103': 'Early Hints',
                    '200': 'OK',
                    '201': 'Created',
                    '202': 'Accepted',
                    '203': 'Non-Authoritative Information',
                    '204': 'No Content',
                    '205': 'Reset Content',
                    '206': 'Partial Content',
                    '207': 'Multi-Status',
                    '208': 'Already Reported',
                    '226': 'IM Used',
                    '300': 'Multiple Choices',
                    '301': 'Moved Permanently',
                    '302': 'Found',
                    '303': 'See Other',
                    '304': 'Not Modified',
                    '305': 'Use Proxy',
                    '307': 'Temporary Redirect',
                    '308': 'Permanent Redirect',
                    '400': 'Bad Request',
                    '401': 'Unauthorized',
                    '402': 'Payment Required',
                    '403': 'Forbidden',
                    '404': 'Not Found',
                    '405': 'Method Not Allowed',
                    '406': 'Not Acceptable',
                    '407': 'Proxy Authentication Required',
                    '408': 'Request Timeout',
                    '409': 'Conflict',
                    '410': 'Gone',
                    '411': 'Length Required',
                    '412': 'Precondition Failed',
                    '413': 'Payload Too Large',
                    '414': 'URI Too Long',
                    '415': 'Unsupported Media Type',
                    '416': 'Range Not Satisfiable',
                    '417': 'Expectation Failed',
                    '418': 'I\'m a Teapot',
                    '421': 'Misdirected Request',
                    '422': 'Unprocessable Entity',
                    '423': 'Locked',
                    '424': 'Failed Dependency',
                    '425': 'Unordered Collection',
                    '426': 'Upgrade Required',
                    '428': 'Precondition Required',
                    '429': 'Too Many Requests',
                    '431': 'Request Header Fields Too Large',
                    '451': 'Unavailable For Legal Reasons',
                    '500': 'Internal Server Error',
                    '501': 'Not Implemented',
                    '502': 'Bad Gateway',
                    '503': 'Service Unavailable',
                    '504': 'Gateway Timeout',
                    '505': 'HTTP Version Not Supported',
                    '506': 'Variant Also Negotiates',
                    '507': 'Insufficient Storage',
                    '508': 'Loop Detected',
                    '509': 'Bandwidth Limit Exceeded',
                    '510': 'Not Extended',
                    '511': 'Network Authentication Required' },
                 Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: EventEmitter]
                       EventEmitter: [Circular],
                       usingDomains: false,
                       defaultMaxListeners: [Getter/Setter],
                       init: [Function],
                       listenerCount: [Function] },
                    defaultMaxSockets: Infinity },
                 ClientRequest:
                  { [Function: ClientRequest]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 80,
                    protocol: 'http:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256 },
                 IncomingMessage:
                  { [Function: IncomingMessage]
                    super_:
                     { [Function: Readable]
                       ReadableState: [Function: ReadableState],
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable: [Circular],
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex: { [Function: Duplex] super_: [Circular] },
                          Transform:
                           { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                       _fromList: [Function: fromList] } },
                 OutgoingMessage:
                  { [Function: OutgoingMessage]
                    super_:
                     { [Function: Stream]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       Readable:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_: [Circular],
                          _fromList: [Function: fromList] },
                       Writable:
                        { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                       Duplex:
                        { [Function: Duplex]
                          super_:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] } },
                       Transform:
                        { [Function: Transform]
                          super_:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } } },
                       PassThrough:
                        { [Function: PassThrough]
                          super_:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } } },
                       pipeline: [Function: pipeline],
                       finished: [Function: eos],
                       Stream: [Circular],
                       _isUint8Array: [Function: isUint8Array],
                       _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] } } },
                 ServerResponse:
                  { [Function: ServerResponse]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request],
                 maxHeaderSize: [Getter] },
              'https:':
               { Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'proclubs.ea.com:443::::::::::::::::':
                           <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                       list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] } },
           port: 443,
           hostname: 'proclubs.ea.com',
           auth: undefined,
           agents: { http: undefined, https: undefined },
           agent: undefined,
           headers:
            { Accept: 'application/json',
              Host: 'proclubs.ea.com',
              'Accept-Language': 'en-US,en;q=0.5',
              'Accept-Encoding': 'gzip, deflate, br',
              Origin: 'https://www.ea.com',
              Connection: 'keep-alive',
              Referer:
               ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/match-history?clubId=6703918&platform=ps4',
              'Content-Type': 'application/json',
              'User-Agent': 'axios/0.21.1' },
           method: 'GET',
           path: null,
           protocol: 'https:',
           maxBodyLength: 10485760,
           maxRedirects: 21,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'proclubs.ea.com:443::::::::::::::::':
                     <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                 list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
           servername: 'proclubs.ea.com',
           singleUse: true } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: false,
           secureContext: SecureContext { context: null, singleUse: true },
           isServer: false,
           requestCert: true,
           rejectUnauthorized: true,
           session: undefined,
           ALPNProtocols: undefined,
           requestOCSP: undefined },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'proclubs.ea.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events:
         [Object: null prototype] {
           close: [ [Function: onSocketCloseDestroySSL], [Function: onClose] ],
           end: [Function: onReadableStreamEnd],
           secure: [Function: onConnectSecure],
           free: [Function: onFree],
           agentRemove: [Function: onRemove],
           drain: [Function: ondrain],
           error:
            { [Function: bound onceWrapper] listener: [Function: freeSocketErrorListener] } },
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'proclubs.ea.com',
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           paused: false,
           emitClose: false,
           destroyed: true,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: false,
        _maxListeners: undefined,
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: false,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           destroyed: true,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           emitClose: false,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(res)]: null,
        [Symbol(asyncId)]: 25,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 6611,
        [Symbol(kBytesWritten)]: 435,
        [Symbol(connect-options)]:
         { rejectUnauthorized: true,
           ciphers:
            'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
           checkServerIdentity: [Function: checkServerIdentity],
           minDHSize: 1024,
           encoding: null,
           _agentKey: 'proclubs.ea.com:443::::::::::::::::',
           host: 'proclubs.ea.com',
           search: '?matchType=gameType9&platform=ps4&clubIds=6703918',
           pathname: '/api/fifa/clubs/matches',
           nativeProtocols:
            { 'http:':
               { _connectionListener: [Function: connectionListener],
                 METHODS:
                  [ 'ACL',
                    'BIND',
                    'CHECKOUT',
                    'CONNECT',
                    'COPY',
                    'DELETE',
                    'GET',
                    'HEAD',
                    'LINK',
                    'LOCK',
                    'M-SEARCH',
                    'MERGE',
                    'MKACTIVITY',
                    'MKCALENDAR',
                    'MKCOL',
                    'MOVE',
                    'NOTIFY',
                    'OPTIONS',
                    'PATCH',
                    'POST',
                    'PROPFIND',
                    'PROPPATCH',
                    'PURGE',
                    'PUT',
                    'REBIND',
                    'REPORT',
                    'SEARCH',
                    'SOURCE',
                    'SUBSCRIBE',
                    'TRACE',
                    'UNBIND',
                    'UNLINK',
                    'UNLOCK',
                    'UNSUBSCRIBE' ],
                 STATUS_CODES:
                  { '100': 'Continue',
                    '101': 'Switching Protocols',
                    '102': 'Processing',
                    '103': 'Early Hints',
                    '200': 'OK',
                    '201': 'Created',
                    '202': 'Accepted',
                    '203': 'Non-Authoritative Information',
                    '204': 'No Content',
                    '205': 'Reset Content',
                    '206': 'Partial Content',
                    '207': 'Multi-Status',
                    '208': 'Already Reported',
                    '226': 'IM Used',
                    '300': 'Multiple Choices',
                    '301': 'Moved Permanently',
                    '302': 'Found',
                    '303': 'See Other',
                    '304': 'Not Modified',
                    '305': 'Use Proxy',
                    '307': 'Temporary Redirect',
                    '308': 'Permanent Redirect',
                    '400': 'Bad Request',
                    '401': 'Unauthorized',
                    '402': 'Payment Required',
                    '403': 'Forbidden',
                    '404': 'Not Found',
                    '405': 'Method Not Allowed',
                    '406': 'Not Acceptable',
                    '407': 'Proxy Authentication Required',
                    '408': 'Request Timeout',
                    '409': 'Conflict',
                    '410': 'Gone',
                    '411': 'Length Required',
                    '412': 'Precondition Failed',
                    '413': 'Payload Too Large',
                    '414': 'URI Too Long',
                    '415': 'Unsupported Media Type',
                    '416': 'Range Not Satisfiable',
                    '417': 'Expectation Failed',
                    '418': 'I\'m a Teapot',
                    '421': 'Misdirected Request',
                    '422': 'Unprocessable Entity',
                    '423': 'Locked',
                    '424': 'Failed Dependency',
                    '425': 'Unordered Collection',
                    '426': 'Upgrade Required',
                    '428': 'Precondition Required',
                    '429': 'Too Many Requests',
                    '431': 'Request Header Fields Too Large',
                    '451': 'Unavailable For Legal Reasons',
                    '500': 'Internal Server Error',
                    '501': 'Not Implemented',
                    '502': 'Bad Gateway',
                    '503': 'Service Unavailable',
                    '504': 'Gateway Timeout',
                    '505': 'HTTP Version Not Supported',
                    '506': 'Variant Also Negotiates',
                    '507': 'Insufficient Storage',
                    '508': 'Loop Detected',
                    '509': 'Bandwidth Limit Exceeded',
                    '510': 'Not Extended',
                    '511': 'Network Authentication Required' },
                 Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: EventEmitter]
                       EventEmitter: [Circular],
                       usingDomains: false,
                       defaultMaxListeners: [Getter/Setter],
                       init: [Function],
                       listenerCount: [Function] },
                    defaultMaxSockets: Infinity },
                 ClientRequest:
                  { [Function: ClientRequest]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 80,
                    protocol: 'http:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256 },
                 IncomingMessage:
                  { [Function: IncomingMessage]
                    super_:
                     { [Function: Readable]
                       ReadableState: [Function: ReadableState],
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable: [Circular],
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex: { [Function: Duplex] super_: [Circular] },
                          Transform:
                           { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                       _fromList: [Function: fromList] } },
                 OutgoingMessage:
                  { [Function: OutgoingMessage]
                    super_:
                     { [Function: Stream]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       Readable:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_: [Circular],
                          _fromList: [Function: fromList] },
                       Writable:
                        { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                       Duplex:
                        { [Function: Duplex]
                          super_:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] } },
                       Transform:
                        { [Function: Transform]
                          super_:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } } },
                       PassThrough:
                        { [Function: PassThrough]
                          super_:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } } },
                       pipeline: [Function: pipeline],
                       finished: [Function: eos],
                       Stream: [Circular],
                       _isUint8Array: [Function: isUint8Array],
                       _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] } } },
                 ServerResponse:
                  { [Function: ServerResponse]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request],
                 maxHeaderSize: [Getter] },
              'https:':
               { Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'proclubs.ea.com:443::::::::::::::::':
                           <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                       list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] } },
           port: 443,
           hostname: 'proclubs.ea.com',
           auth: undefined,
           agents: { http: undefined, https: undefined },
           agent: undefined,
           headers:
            { Accept: 'application/json',
              Host: 'proclubs.ea.com',
              'Accept-Language': 'en-US,en;q=0.5',
              'Accept-Encoding': 'gzip, deflate, br',
              Origin: 'https://www.ea.com',
              Connection: 'keep-alive',
              Referer:
               ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/match-history?clubId=6703918&platform=ps4',
              'Content-Type': 'application/json',
              'User-Agent': 'axios/0.21.1' },
           method: 'GET',
           path: null,
           protocol: 'https:',
           maxBodyLength: 10485760,
           maxRedirects: 21,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'proclubs.ea.com:443::::::::::::::::':
                     <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                 list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
           servername: 'proclubs.ea.com',
           singleUse: true } },
     _header:
      'GET /api/fifa/clubs/matches?matchType=gameType9&platform=ps4&clubIds=6703918 HTTP/1.1\r\nAccept: application/json\r\nHost: proclubs.ea.com\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nOrigin: https://www.ea.com\r\nConnection: keep-alive\r\nReferer:  https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/match-history?clubId=6703918&platform=ps4\r\nContent-Type: application/json\r\nUser-Agent: axios/0.21.1\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object: null prototype] { free: [Function] },
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: { path: null },
        requests: {},
        sockets: {},
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        maxCachedSessions: 100,
        _sessionCache:
         { map:
            { 'proclubs.ea.com:443::::::::::::::::':
               <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
           list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
     socketPath: undefined,
     timeout: undefined,
     method: 'GET',
     path:
      '/api/fifa/clubs/matches?matchType=gameType9&platform=ps4&clubIds=6703918',
     _ended: true,
     res:
      IncomingMessage {
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: false,
           ended: true,
           endEmitted: true,
           reading: false,
           sync: true,
           needReadable: false,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           paused: false,
           emitClose: true,
           destroyed: false,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: true,
           decoder: null,
           encoding: null },
        readable: false,
        _events: [Object: null prototype] { end: [Function: responseOnEnd] },
        _eventsCount: 1,
        _maxListeners: undefined,
        socket:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: null, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session: undefined,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: 'proclubs.ea.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close: [ [Function: onSocketCloseDestroySSL], [Function: onClose] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error:
               { [Function: bound onceWrapper] listener: [Function: freeSocketErrorListener] } },
           _eventsCount: 7,
           connecting: false,
           _hadError: false,
           _handle: null,
           _parent: null,
           _host: 'proclubs.ea.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              paused: false,
              emitClose: false,
              destroyed: true,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: false,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: true,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl: null,
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           [Symbol(res)]: null,
           [Symbol(asyncId)]: 25,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 6611,
           [Symbol(kBytesWritten)]: 435,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              encoding: null,
              _agentKey: 'proclubs.ea.com:443::::::::::::::::',
              host: 'proclubs.ea.com',
              search: '?matchType=gameType9&platform=ps4&clubIds=6703918',
              pathname: '/api/fifa/clubs/matches',
              nativeProtocols:
               { 'http:':
                  { _connectionListener: [Function: connectionListener],
                    METHODS:
                     [ 'ACL',
                       'BIND',
                       'CHECKOUT',
                       'CONNECT',
                       'COPY',
                       'DELETE',
                       'GET',
                       'HEAD',
                       'LINK',
                       'LOCK',
                       'M-SEARCH',
                       'MERGE',
                       'MKACTIVITY',
                       'MKCALENDAR',
                       'MKCOL',
                       'MOVE',
                       'NOTIFY',
                       'OPTIONS',
                       'PATCH',
                       'POST',
                       'PROPFIND',
                       'PROPPATCH',
                       'PURGE',
                       'PUT',
                       'REBIND',
                       'REPORT',
                       'SEARCH',
                       'SOURCE',
                       'SUBSCRIBE',
                       'TRACE',
                       'UNBIND',
                       'UNLINK',
                       'UNLOCK',
                       'UNSUBSCRIBE' ],
                    STATUS_CODES:
                     { '100': 'Continue',
                       '101': 'Switching Protocols',
                       '102': 'Processing',
                       '103': 'Early Hints',
                       '200': 'OK',
                       '201': 'Created',
                       '202': 'Accepted',
                       '203': 'Non-Authoritative Information',
                       '204': 'No Content',
                       '205': 'Reset Content',
                       '206': 'Partial Content',
                       '207': 'Multi-Status',
                       '208': 'Already Reported',
                       '226': 'IM Used',
                       '300': 'Multiple Choices',
                       '301': 'Moved Permanently',
                       '302': 'Found',
                       '303': 'See Other',
                       '304': 'Not Modified',
                       '305': 'Use Proxy',
                       '307': 'Temporary Redirect',
                       '308': 'Permanent Redirect',
                       '400': 'Bad Request',
                       '401': 'Unauthorized',
                       '402': 'Payment Required',
                       '403': 'Forbidden',
                       '404': 'Not Found',
                       '405': 'Method Not Allowed',
                       '406': 'Not Acceptable',
                       '407': 'Proxy Authentication Required',
                       '408': 'Request Timeout',
                       '409': 'Conflict',
                       '410': 'Gone',
                       '411': 'Length Required',
                       '412': 'Precondition Failed',
                       '413': 'Payload Too Large',
                       '414': 'URI Too Long',
                       '415': 'Unsupported Media Type',
                       '416': 'Range Not Satisfiable',
                       '417': 'Expectation Failed',
                       '418': 'I\'m a Teapot',
                       '421': 'Misdirected Request',
                       '422': 'Unprocessable Entity',
                       '423': 'Locked',
                       '424': 'Failed Dependency',
                       '425': 'Unordered Collection',
                       '426': 'Upgrade Required',
                       '428': 'Precondition Required',
                       '429': 'Too Many Requests',
                       '431': 'Request Header Fields Too Large',
                       '451': 'Unavailable For Legal Reasons',
                       '500': 'Internal Server Error',
                       '501': 'Not Implemented',
                       '502': 'Bad Gateway',
                       '503': 'Service Unavailable',
                       '504': 'Gateway Timeout',
                       '505': 'HTTP Version Not Supported',
                       '506': 'Variant Also Negotiates',
                       '507': 'Insufficient Storage',
                       '508': 'Loop Detected',
                       '509': 'Bandwidth Limit Exceeded',
                       '510': 'Not Extended',
                       '511': 'Network Authentication Required' },
                    Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity },
                    ClientRequest:
                     { [Function: ClientRequest]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 80,
                       protocol: 'http:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256 },
                    IncomingMessage:
                     { [Function: IncomingMessage]
                       super_:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable: [Circular],
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex: { [Function: Duplex] super_: [Circular] },
                             Transform:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                          _fromList: [Function: fromList] } },
                    OutgoingMessage:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } },
                    ServerResponse:
                     { [Function: ServerResponse]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request],
                    maxHeaderSize: [Getter] },
                 'https:':
                  { Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: Agent]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          defaultMaxSockets: Infinity } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'proclubs.ea.com:443::::::::::::::::':
                              <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                          list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: Server]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] } } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] } },
              port: 443,
              hostname: 'proclubs.ea.com',
              auth: undefined,
              agents: { http: undefined, https: undefined },
              agent: undefined,
              headers:
               { Accept: 'application/json',
                 Host: 'proclubs.ea.com',
                 'Accept-Language': 'en-US,en;q=0.5',
                 'Accept-Encoding': 'gzip, deflate, br',
                 Origin: 'https://www.ea.com',
                 Connection: 'keep-alive',
                 Referer:
                  ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/match-history?clubId=6703918&platform=ps4',
                 'Content-Type': 'application/json',
                 'User-Agent': 'axios/0.21.1' },
              method: 'GET',
              path: null,
              protocol: 'https:',
              maxBodyLength: 10485760,
              maxRedirects: 21,
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: {},
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'proclubs.ea.com:443::::::::::::::::':
                        <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                    list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
              servername: 'proclubs.ea.com',
              singleUse: true } },
        connection:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: null, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session: undefined,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: 'proclubs.ea.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close: [ [Function: onSocketCloseDestroySSL], [Function: onClose] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error:
               { [Function: bound onceWrapper] listener: [Function: freeSocketErrorListener] } },
           _eventsCount: 7,
           connecting: false,
           _hadError: false,
           _handle: null,
           _parent: null,
           _host: 'proclubs.ea.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              paused: false,
              emitClose: false,
              destroyed: true,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: false,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: true,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl: null,
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           [Symbol(res)]: null,
           [Symbol(asyncId)]: 25,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 6611,
           [Symbol(kBytesWritten)]: 435,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              encoding: null,
              _agentKey: 'proclubs.ea.com:443::::::::::::::::',
              host: 'proclubs.ea.com',
              search: '?matchType=gameType9&platform=ps4&clubIds=6703918',
              pathname: '/api/fifa/clubs/matches',
              nativeProtocols:
               { 'http:':
                  { _connectionListener: [Function: connectionListener],
                    METHODS:
                     [ 'ACL',
                       'BIND',
                       'CHECKOUT',
                       'CONNECT',
                       'COPY',
                       'DELETE',
                       'GET',
                       'HEAD',
                       'LINK',
                       'LOCK',
                       'M-SEARCH',
                       'MERGE',
                       'MKACTIVITY',
                       'MKCALENDAR',
                       'MKCOL',
                       'MOVE',
                       'NOTIFY',
                       'OPTIONS',
                       'PATCH',
                       'POST',
                       'PROPFIND',
                       'PROPPATCH',
                       'PURGE',
                       'PUT',
                       'REBIND',
                       'REPORT',
                       'SEARCH',
                       'SOURCE',
                       'SUBSCRIBE',
                       'TRACE',
                       'UNBIND',
                       'UNLINK',
                       'UNLOCK',
                       'UNSUBSCRIBE' ],
                    STATUS_CODES:
                     { '100': 'Continue',
                       '101': 'Switching Protocols',
                       '102': 'Processing',
                       '103': 'Early Hints',
                       '200': 'OK',
                       '201': 'Created',
                       '202': 'Accepted',
                       '203': 'Non-Authoritative Information',
                       '204': 'No Content',
                       '205': 'Reset Content',
                       '206': 'Partial Content',
                       '207': 'Multi-Status',
                       '208': 'Already Reported',
                       '226': 'IM Used',
                       '300': 'Multiple Choices',
                       '301': 'Moved Permanently',
                       '302': 'Found',
                       '303': 'See Other',
                       '304': 'Not Modified',
                       '305': 'Use Proxy',
                       '307': 'Temporary Redirect',
                       '308': 'Permanent Redirect',
                       '400': 'Bad Request',
                       '401': 'Unauthorized',
                       '402': 'Payment Required',
                       '403': 'Forbidden',
                       '404': 'Not Found',
                       '405': 'Method Not Allowed',
                       '406': 'Not Acceptable',
                       '407': 'Proxy Authentication Required',
                       '408': 'Request Timeout',
                       '409': 'Conflict',
                       '410': 'Gone',
                       '411': 'Length Required',
                       '412': 'Precondition Failed',
                       '413': 'Payload Too Large',
                       '414': 'URI Too Long',
                       '415': 'Unsupported Media Type',
                       '416': 'Range Not Satisfiable',
                       '417': 'Expectation Failed',
                       '418': 'I\'m a Teapot',
                       '421': 'Misdirected Request',
                       '422': 'Unprocessable Entity',
                       '423': 'Locked',
                       '424': 'Failed Dependency',
                       '425': 'Unordered Collection',
                       '426': 'Upgrade Required',
                       '428': 'Precondition Required',
                       '429': 'Too Many Requests',
                       '431': 'Request Header Fields Too Large',
                       '451': 'Unavailable For Legal Reasons',
                       '500': 'Internal Server Error',
                       '501': 'Not Implemented',
                       '502': 'Bad Gateway',
                       '503': 'Service Unavailable',
                       '504': 'Gateway Timeout',
                       '505': 'HTTP Version Not Supported',
                       '506': 'Variant Also Negotiates',
                       '507': 'Insufficient Storage',
                       '508': 'Loop Detected',
                       '509': 'Bandwidth Limit Exceeded',
                       '510': 'Not Extended',
                       '511': 'Network Authentication Required' },
                    Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity },
                    ClientRequest:
                     { [Function: ClientRequest]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 80,
                       protocol: 'http:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256 },
                    IncomingMessage:
                     { [Function: IncomingMessage]
                       super_:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable: [Circular],
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex: { [Function: Duplex] super_: [Circular] },
                             Transform:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                          _fromList: [Function: fromList] } },
                    OutgoingMessage:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } },
                    ServerResponse:
                     { [Function: ServerResponse]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request],
                    maxHeaderSize: [Getter] },
                 'https:':
                  { Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: Agent]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          defaultMaxSockets: Infinity } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'proclubs.ea.com:443::::::::::::::::':
                              <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                          list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: Server]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] } } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] } },
              port: 443,
              hostname: 'proclubs.ea.com',
              auth: undefined,
              agents: { http: undefined, https: undefined },
              agent: undefined,
              headers:
               { Accept: 'application/json',
                 Host: 'proclubs.ea.com',
                 'Accept-Language': 'en-US,en;q=0.5',
                 'Accept-Encoding': 'gzip, deflate, br',
                 Origin: 'https://www.ea.com',
                 Connection: 'keep-alive',
                 Referer:
                  ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/match-history?clubId=6703918&platform=ps4',
                 'Content-Type': 'application/json',
                 'User-Agent': 'axios/0.21.1' },
              method: 'GET',
              path: null,
              protocol: 'https:',
              maxBodyLength: 10485760,
              maxRedirects: 21,
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: {},
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'proclubs.ea.com:443::::::::::::::::':
                        <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                    list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
              servername: 'proclubs.ea.com',
              singleUse: true } },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers:
         { 'content-type': 'application/json',
           server: 'nginx',
           'referrer-policy': 'origin-when-cross-origin, strict-origin-when-cross-origin',
           'x-frame-options': 'DENY',
           'x-xss-protection': '1; mode=block',
           'x-content-type-options': 'nosniff',
           'content-security-policy': 'default-src \'self\'',
           'access-control-allow-origin': 'https://www.ea.com',
           'access-control-allow-credentials': 'true',
           'x-permitted-cross-domain-policies': 'master-only',
           'content-length': '5896',
           'cache-control': 'max-age=138',
           expires: 'Tue, 12 Jan 2021 22:05:05 GMT',
           date: 'Tue, 12 Jan 2021 22:02:47 GMT',
           connection: 'keep-alive',
           vary: 'Accept-Encoding',
           'x-environment-context': 'prod',
           'x-application-context': 'proclubs',
           'strict-transport-security': 'max-age=86400' },
        rawHeaders:
         [ 'Content-Type',
           'application/json',
           'Server',
           'nginx',
           'Referrer-Policy',
           'origin-when-cross-origin, strict-origin-when-cross-origin',
           'X-Frame-Options',
           'DENY',
           'X-XSS-Protection',
           '1; mode=block',
           'X-Content-Type-Options',
           'nosniff',
           'Content-Security-Policy',
           'default-src \'self\'',
           'Access-Control-Allow-Origin',
           'https://www.ea.com',
           'Access-Control-Allow-Credentials',
           'true',
           'X-Permitted-Cross-Domain-Policies',
           'master-only',
           'Content-Encoding',
           'gzip',
           'Content-Length',
           '5896',
           'Cache-Control',
           'max-age=138',
           'Expires',
           'Tue, 12 Jan 2021 22:05:05 GMT',
           'Date',
           'Tue, 12 Jan 2021 22:02:47 GMT',
           'Connection',
           'keep-alive',
           'Vary',
           'Accept-Encoding',
           'X-Environment-Context',
           'prod',
           'X-Application-Context',
           'proclubs',
           'Strict-Transport-Security',
           'max-age=86400' ],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: null, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session: undefined,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: 'proclubs.ea.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close: [ [Function: onSocketCloseDestroySSL], [Function: onClose] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error:
               { [Function: bound onceWrapper] listener: [Function: freeSocketErrorListener] } },
           _eventsCount: 7,
           connecting: false,
           _hadError: false,
           _handle: null,
           _parent: null,
           _host: 'proclubs.ea.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              paused: false,
              emitClose: false,
              destroyed: true,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: false,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: true,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl: null,
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           [Symbol(res)]: null,
           [Symbol(asyncId)]: 25,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 6611,
           [Symbol(kBytesWritten)]: 435,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              encoding: null,
              _agentKey: 'proclubs.ea.com:443::::::::::::::::',
              host: 'proclubs.ea.com',
              search: '?matchType=gameType9&platform=ps4&clubIds=6703918',
              pathname: '/api/fifa/clubs/matches',
              nativeProtocols:
               { 'http:':
                  { _connectionListener: [Function: connectionListener],
                    METHODS:
                     [ 'ACL',
                       'BIND',
                       'CHECKOUT',
                       'CONNECT',
                       'COPY',
                       'DELETE',
                       'GET',
                       'HEAD',
                       'LINK',
                       'LOCK',
                       'M-SEARCH',
                       'MERGE',
                       'MKACTIVITY',
                       'MKCALENDAR',
                       'MKCOL',
                       'MOVE',
                       'NOTIFY',
                       'OPTIONS',
                       'PATCH',
                       'POST',
                       'PROPFIND',
                       'PROPPATCH',
                       'PURGE',
                       'PUT',
                       'REBIND',
                       'REPORT',
                       'SEARCH',
                       'SOURCE',
                       'SUBSCRIBE',
                       'TRACE',
                       'UNBIND',
                       'UNLINK',
                       'UNLOCK',
                       'UNSUBSCRIBE' ],
                    STATUS_CODES:
                     { '100': 'Continue',
                       '101': 'Switching Protocols',
                       '102': 'Processing',
                       '103': 'Early Hints',
                       '200': 'OK',
                       '201': 'Created',
                       '202': 'Accepted',
                       '203': 'Non-Authoritative Information',
                       '204': 'No Content',
                       '205': 'Reset Content',
                       '206': 'Partial Content',
                       '207': 'Multi-Status',
                       '208': 'Already Reported',
                       '226': 'IM Used',
                       '300': 'Multiple Choices',
                       '301': 'Moved Permanently',
                       '302': 'Found',
                       '303': 'See Other',
                       '304': 'Not Modified',
                       '305': 'Use Proxy',
                       '307': 'Temporary Redirect',
                       '308': 'Permanent Redirect',
                       '400': 'Bad Request',
                       '401': 'Unauthorized',
                       '402': 'Payment Required',
                       '403': 'Forbidden',
                       '404': 'Not Found',
                       '405': 'Method Not Allowed',
                       '406': 'Not Acceptable',
                       '407': 'Proxy Authentication Required',
                       '408': 'Request Timeout',
                       '409': 'Conflict',
                       '410': 'Gone',
                       '411': 'Length Required',
                       '412': 'Precondition Failed',
                       '413': 'Payload Too Large',
                       '414': 'URI Too Long',
                       '415': 'Unsupported Media Type',
                       '416': 'Range Not Satisfiable',
                       '417': 'Expectation Failed',
                       '418': 'I\'m a Teapot',
                       '421': 'Misdirected Request',
                       '422': 'Unprocessable Entity',
                       '423': 'Locked',
                       '424': 'Failed Dependency',
                       '425': 'Unordered Collection',
                       '426': 'Upgrade Required',
                       '428': 'Precondition Required',
                       '429': 'Too Many Requests',
                       '431': 'Request Header Fields Too Large',
                       '451': 'Unavailable For Legal Reasons',
                       '500': 'Internal Server Error',
                       '501': 'Not Implemented',
                       '502': 'Bad Gateway',
                       '503': 'Service Unavailable',
                       '504': 'Gateway Timeout',
                       '505': 'HTTP Version Not Supported',
                       '506': 'Variant Also Negotiates',
                       '507': 'Insufficient Storage',
                       '508': 'Loop Detected',
                       '509': 'Bandwidth Limit Exceeded',
                       '510': 'Not Extended',
                       '511': 'Network Authentication Required' },
                    Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity },
                    ClientRequest:
                     { [Function: ClientRequest]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 80,
                       protocol: 'http:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256 },
                    IncomingMessage:
                     { [Function: IncomingMessage]
                       super_:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable: [Circular],
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex: { [Function: Duplex] super_: [Circular] },
                             Transform:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                          _fromList: [Function: fromList] } },
                    OutgoingMessage:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } },
                    ServerResponse:
                     { [Function: ServerResponse]
                       super_:
                        { [Function: OutgoingMessage]
                          super_:
                           { [Function: Stream]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] },
                             Readable:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] },
                             Writable:
                              { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                             Duplex:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } },
                             Transform:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } },
                             PassThrough:
                              { [Function: PassThrough]
                                super_:
                                 { [Function: Transform]
                                   super_:
                                    { [Function: Duplex]
                                      super_:
                                       { [Function: Readable]
                                         ReadableState: [Function: ReadableState],
                                         super_: [Circular],
                                         _fromList: [Function: fromList] } } } },
                             pipeline: [Function: pipeline],
                             finished: [Function: eos],
                             Stream: [Circular],
                             _isUint8Array: [Function: isUint8Array],
                             _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request],
                    maxHeaderSize: [Getter] },
                 'https:':
                  { Agent:
                     { [Function: Agent]
                       super_:
                        { [Function: Agent]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          defaultMaxSockets: Infinity } },
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'proclubs.ea.com:443::::::::::::::::':
                              <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                          list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                    Server:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: Server]
                             super_:
                              { [Function: EventEmitter]
                                EventEmitter: [Circular],
                                usingDomains: false,
                                defaultMaxListeners: [Getter/Setter],
                                init: [Function],
                                listenerCount: [Function] } } } },
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] } },
              port: 443,
              hostname: 'proclubs.ea.com',
              auth: undefined,
              agents: { http: undefined, https: undefined },
              agent: undefined,
              headers:
               { Accept: 'application/json',
                 Host: 'proclubs.ea.com',
                 'Accept-Language': 'en-US,en;q=0.5',
                 'Accept-Encoding': 'gzip, deflate, br',
                 Origin: 'https://www.ea.com',
                 Connection: 'keep-alive',
                 Referer:
                  ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/match-history?clubId=6703918&platform=ps4',
                 'Content-Type': 'application/json',
                 'User-Agent': 'axios/0.21.1' },
              method: 'GET',
              path: null,
              protocol: 'https:',
              maxBodyLength: 10485760,
              maxRedirects: 21,
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: {},
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'proclubs.ea.com:443::::::::::::::::':
                        <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                    list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
              servername: 'proclubs.ea.com',
              singleUse: true } },
        _consuming: false,
        _dumped: false,
        req: [Circular],
        responseUrl:
         'https://proclubs.ea.com/api/fifa/clubs/matches?matchType=gameType9&platform=ps4&clubIds=6703918',
        redirects: [] },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     _redirectable:
      Writable {
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: false,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           destroyed: false,
           decodeStrings: true,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: true,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           emitClose: true,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: true,
        _events:
         [Object: null prototype] {
           response: [Function: handleResponse],
           error: [Function: handleRequestError] },
        _eventsCount: 2,
        _maxListeners: undefined,
        _options:
         { maxRedirects: 21,
           maxBodyLength: 10485760,
           protocol: 'https:',
           path:
            '/api/fifa/clubs/matches?matchType=gameType9&platform=ps4&clubIds=6703918',
           method: 'GET',
           headers:
            { Accept: 'application/json',
              Host: 'proclubs.ea.com',
              'Accept-Language': 'en-US,en;q=0.5',
              'Accept-Encoding': 'gzip, deflate, br',
              Origin: 'https://www.ea.com',
              Connection: 'keep-alive',
              Referer:
               ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/match-history?clubId=6703918&platform=ps4',
              'Content-Type': 'application/json',
              'User-Agent': 'axios/0.21.1' },
           agent: undefined,
           agents: { http: undefined, https: undefined },
           auth: undefined,
           hostname: 'proclubs.ea.com',
           port: null,
           nativeProtocols:
            { 'http:':
               { _connectionListener: [Function: connectionListener],
                 METHODS:
                  [ 'ACL',
                    'BIND',
                    'CHECKOUT',
                    'CONNECT',
                    'COPY',
                    'DELETE',
                    'GET',
                    'HEAD',
                    'LINK',
                    'LOCK',
                    'M-SEARCH',
                    'MERGE',
                    'MKACTIVITY',
                    'MKCALENDAR',
                    'MKCOL',
                    'MOVE',
                    'NOTIFY',
                    'OPTIONS',
                    'PATCH',
                    'POST',
                    'PROPFIND',
                    'PROPPATCH',
                    'PURGE',
                    'PUT',
                    'REBIND',
                    'REPORT',
                    'SEARCH',
                    'SOURCE',
                    'SUBSCRIBE',
                    'TRACE',
                    'UNBIND',
                    'UNLINK',
                    'UNLOCK',
                    'UNSUBSCRIBE' ],
                 STATUS_CODES:
                  { '100': 'Continue',
                    '101': 'Switching Protocols',
                    '102': 'Processing',
                    '103': 'Early Hints',
                    '200': 'OK',
                    '201': 'Created',
                    '202': 'Accepted',
                    '203': 'Non-Authoritative Information',
                    '204': 'No Content',
                    '205': 'Reset Content',
                    '206': 'Partial Content',
                    '207': 'Multi-Status',
                    '208': 'Already Reported',
                    '226': 'IM Used',
                    '300': 'Multiple Choices',
                    '301': 'Moved Permanently',
                    '302': 'Found',
                    '303': 'See Other',
                    '304': 'Not Modified',
                    '305': 'Use Proxy',
                    '307': 'Temporary Redirect',
                    '308': 'Permanent Redirect',
                    '400': 'Bad Request',
                    '401': 'Unauthorized',
                    '402': 'Payment Required',
                    '403': 'Forbidden',
                    '404': 'Not Found',
                    '405': 'Method Not Allowed',
                    '406': 'Not Acceptable',
                    '407': 'Proxy Authentication Required',
                    '408': 'Request Timeout',
                    '409': 'Conflict',
                    '410': 'Gone',
                    '411': 'Length Required',
                    '412': 'Precondition Failed',
                    '413': 'Payload Too Large',
                    '414': 'URI Too Long',
                    '415': 'Unsupported Media Type',
                    '416': 'Range Not Satisfiable',
                    '417': 'Expectation Failed',
                    '418': 'I\'m a Teapot',
                    '421': 'Misdirected Request',
                    '422': 'Unprocessable Entity',
                    '423': 'Locked',
                    '424': 'Failed Dependency',
                    '425': 'Unordered Collection',
                    '426': 'Upgrade Required',
                    '428': 'Precondition Required',
                    '429': 'Too Many Requests',
                    '431': 'Request Header Fields Too Large',
                    '451': 'Unavailable For Legal Reasons',
                    '500': 'Internal Server Error',
                    '501': 'Not Implemented',
                    '502': 'Bad Gateway',
                    '503': 'Service Unavailable',
                    '504': 'Gateway Timeout',
                    '505': 'HTTP Version Not Supported',
                    '506': 'Variant Also Negotiates',
                    '507': 'Insufficient Storage',
                    '508': 'Loop Detected',
                    '509': 'Bandwidth Limit Exceeded',
                    '510': 'Not Extended',
                    '511': 'Network Authentication Required' },
                 Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: EventEmitter]
                       EventEmitter: [Circular],
                       usingDomains: false,
                       defaultMaxListeners: [Getter/Setter],
                       init: [Function],
                       listenerCount: [Function] },
                    defaultMaxSockets: Infinity },
                 ClientRequest:
                  { [Function: ClientRequest]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 80,
                    protocol: 'http:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256 },
                 IncomingMessage:
                  { [Function: IncomingMessage]
                    super_:
                     { [Function: Readable]
                       ReadableState: [Function: ReadableState],
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable: [Circular],
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex: { [Function: Duplex] super_: [Circular] },
                          Transform:
                           { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform] super_: { [Function: Duplex] super_: [Circular] } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] },
                       _fromList: [Function: fromList] } },
                 OutgoingMessage:
                  { [Function: OutgoingMessage]
                    super_:
                     { [Function: Stream]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       Readable:
                        { [Function: Readable]
                          ReadableState: [Function: ReadableState],
                          super_: [Circular],
                          _fromList: [Function: fromList] },
                       Writable:
                        { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                       Duplex:
                        { [Function: Duplex]
                          super_:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] } },
                       Transform:
                        { [Function: Transform]
                          super_:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } } },
                       PassThrough:
                        { [Function: PassThrough]
                          super_:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } } },
                       pipeline: [Function: pipeline],
                       finished: [Function: eos],
                       Stream: [Circular],
                       _isUint8Array: [Function: isUint8Array],
                       _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] } } },
                 ServerResponse:
                  { [Function: ServerResponse]
                    super_:
                     { [Function: OutgoingMessage]
                       super_:
                        { [Function: Stream]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] },
                          Readable:
                           { [Function: Readable]
                             ReadableState: [Function: ReadableState],
                             super_: [Circular],
                             _fromList: [Function: fromList] },
                          Writable:
                           { [Function: Writable] WritableState: [Function: WritableState], super_: [Circular] },
                          Duplex:
                           { [Function: Duplex]
                             super_:
                              { [Function: Readable]
                                ReadableState: [Function: ReadableState],
                                super_: [Circular],
                                _fromList: [Function: fromList] } },
                          Transform:
                           { [Function: Transform]
                             super_:
                              { [Function: Duplex]
                                super_:
                                 { [Function: Readable]
                                   ReadableState: [Function: ReadableState],
                                   super_: [Circular],
                                   _fromList: [Function: fromList] } } },
                          PassThrough:
                           { [Function: PassThrough]
                             super_:
                              { [Function: Transform]
                                super_:
                                 { [Function: Duplex]
                                   super_:
                                    { [Function: Readable]
                                      ReadableState: [Function: ReadableState],
                                      super_: [Circular],
                                      _fromList: [Function: fromList] } } } },
                          pipeline: [Function: pipeline],
                          finished: [Function: eos],
                          Stream: [Circular],
                          _isUint8Array: [Function: isUint8Array],
                          _uint8ArrayToBuffer: [Function: _uint8ArrayToBuffer] } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request],
                 maxHeaderSize: [Getter] },
              'https:':
               { Agent:
                  { [Function: Agent]
                    super_:
                     { [Function: Agent]
                       super_:
                        { [Function: EventEmitter]
                          EventEmitter: [Circular],
                          usingDomains: false,
                          defaultMaxListeners: [Getter/Setter],
                          init: [Function],
                          listenerCount: [Function] },
                       defaultMaxSockets: Infinity } },
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'proclubs.ea.com:443::::::::::::::::':
                           <Buffer 30 82 0e fe 02 01 01 02 02 03 03 04 02 c0 30 04 20 03 fb fc 34 18 79 6e 26 7f 70 3a 84 01 83 59 f6 23 16 25 85 18 14 64 41 8f 88 9f df af 1e 56 4a 04 ... > },
                       list: [ 'proclubs.ea.com:443::::::::::::::::' ] } },
                 Server:
                  { [Function: Server]
                    super_:
                     { [Function: Server]
                       super_:
                        { [Function: Server]
                          super_:
                           { [Function: EventEmitter]
                             EventEmitter: [Circular],
                             usingDomains: false,
                             defaultMaxListeners: [Getter/Setter],
                             init: [Function],
                             listenerCount: [Function] } } } },
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] } },
           pathname: '/api/fifa/clubs/matches',
           search: '?matchType=gameType9&platform=ps4&clubIds=6703918' },
        _ended: true,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 0,
        _requestBodyBuffers: [],
        _onNativeResponse: [Function],
        _currentRequest: [Circular],
        _currentUrl:
         'https://proclubs.ea.com/api/fifa/clubs/matches?matchType=gameType9&platform=ps4&clubIds=6703918' },
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        accept: [ 'Accept', 'application/json' ],
        host: [ 'Host', 'proclubs.ea.com' ],
        'accept-language': [ 'Accept-Language', 'en-US,en;q=0.5' ],
        'accept-encoding': [ 'Accept-Encoding', 'gzip, deflate, br' ],
        origin: [ 'Origin', 'https://www.ea.com' ],
        connection: [ 'Connection', 'keep-alive' ],
        referer:
         [ 'Referer',
           ' https://www.ea.com/pt-br/games/fifa/fifa-21/pro-clubs/ps4-xb1-pc/match-history?clubId=6703918&platform=ps4' ],
        'content-type': [ 'Content-Type', 'application/json' ],
        'user-agent': [ 'User-Agent', 'axios/0.21.1' ] } },
  data:
   [ { matchId: '48297029980226',
       timestamp: 1610414751,
       timeAgo: { number: 20, unit: 'hours' },
       clubs:
        { '3835363':
           { gameNumber: '5',
             goals: '5',
             goalsAgainst: '2',
             losses: '0',
             result: '1',
             score: '5',
             season_id: '25',
             TEAM: '99150410',
             ties: '0',
             winnerByDnf: '0',
             wins: '1',
             details:
              { name: 'Sorriso Ronaldo',
                clubId: 3835363,
                regionId: 5456205,
                teamId: 243,
                customKit:
                 { stadName: 'Quadra do CIEP',
                   kitId: '3981312',
                   isCustomTeam: '1',
                   customKitId: '7625',
                   customAwayKitId: '7516',
                   customKeeperKitId: '5020',
                   kitColor1: '4078905',
                   kitColor2: '1987272',
                   kitColor3: '16777215',
                   kitAColor1: '9572147',
                   kitAColor2: '0',
                   kitAColor3: '11909822',
                   dCustomKit: '0',
                   crestColor: '1987272',
                   crestAssetId: '99150410' } } },
          '6703918':
           { gameNumber: '4',
             goals: '2',
             goalsAgainst: '5',
             losses: '1',
             result: '2',
             score: '2',
             season_id: '29',
             TEAM: '99150901',
             ties: '0',
             winnerByDnf: '0',
             wins: '0',
             details:
              { name: 'Clube do Robson',
                clubId: 6703918,
                regionId: 5456205,
                teamId: 112606,
                customKit:
                 { stadName: 'Arena Robson Oliveira',
                   kitId: '1844936704',
                   isCustomTeam: '1',
                   customKitId: '7616',
                   customAwayKitId: '7636',
                   customKeeperKitId: '5010',
                   kitColor1: '6366622',
                   kitColor2: '16718517',
                   kitColor3: '16244746',
                   kitAColor1: '707566',
                   kitAColor2: '1462584',
                   kitAColor3: '16777215',
                   dCustomKit: '0',
                   crestColor: '9127890',
                   crestAssetId: '99150901' } } } },
       players:
        { '3835363':
           { '821449286':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '2',
                losses: '0',
                mom: '0',
                passattempts: '8',
                passesmade: '5',
                pos: 'midfielder',
                rating: '7.90',
                realtimegame: '888',
                realtimeidle: '24',
                redcards: '0',
                saves: '0',
                SCORE: '5',
                shots: '2',
                tackleattempts: '11',
                tacklesmade: '4',
                vproattr:
                 '090|093|081|082|077|091|071|086|069|085|069|083|084|089|083|089|089|085|060|086|087|068|081|093|062|057|086|083|078|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'rafaelgodoii' },
             '1827419182':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '2',
                losses: '0',
                mom: '1',
                passattempts: '14',
                passesmade: '8',
                pos: 'forward',
                rating: '8.70',
                realtimegame: '888',
                realtimeidle: '10',
                redcards: '0',
                saves: '0',
                SCORE: '5',
                shots: '1',
                tackleattempts: '6',
                tacklesmade: '2',
                vproattr:
                 '093|093|092|088|085|085|069|089|074|086|063|088|076|093|080|091|092|083|082|071|085|055|077|088|051|048|092|084|084|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'trslucas20' },
             '1004398431479':
              { assists: '1',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '2',
                losses: '0',
                mom: '0',
                passattempts: '62',
                passesmade: '47',
                pos: '',
                rating: '7.00',
                realtimegame: '888',
                realtimeidle: '4',
                redcards: '0',
                saves: '0',
                SCORE: '5',
                shots: '2',
                tackleattempts: '8',
                tacklesmade: '7',
                vproattr:
                 '093|093|091|090|079|080|068|089|068|084|063|088|078|093|081|094|095|082|086|074|085|059|080|089|061|059|088|079|084|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'FloresMM' } },
          '6703918':
           { '361655632':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '2',
                goalsconceded: '5',
                losses: '1',
                mom: '0',
                passattempts: '104',
                passesmade: '85',
                pos: '',
                rating: '6.60',
                realtimegame: '888',
                realtimeidle: '0',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '5',
                tackleattempts: '14',
                tacklesmade: '7',
                vproattr:
                 '090|093|083|080|082|082|070|089|075|086|064|088|077|094|078|095|093|082|084|079|092|056|080|090|052|049|093|087|083|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'bastospereira' },
             '1277939677':
              { assists: '2',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '5',
                losses: '1',
                mom: '0',
                passattempts: '27',
                passesmade: '22',
                pos: 'forward',
                rating: '8.10',
                realtimegame: '888',
                realtimeidle: '9',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '1',
                tackleattempts: '3',
                tacklesmade: '1',
                vproattr:
                 '092|092|087|082|086|082|072|089|074|086|063|088|076|091|080|091|095|085|086|071|086|055|080|091|051|048|091|084|090|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'Pedro_H77' },
             '1908279813':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '5',
                losses: '1',
                mom: '0',
                passattempts: '12',
                passesmade: '9',
                pos: 'midfielder',
                rating: '6.20',
                realtimegame: '4564',
                realtimeidle: '9',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '0',
                tackleattempts: '5',
                tacklesmade: '3',
                vproattr:
                 '087|087|085|085|078|088|066|087|069|086|069|085|085|089|086|090|089|084|060|089|092|068|077|091|062|057|088|089|076|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'ThePedroso' } } },
       aggregate:
        { '3835363':
           { assists: 1,
             cleansheetsany: 0,
             cleansheetsdef: 0,
             cleansheetsgk: 0,
             goals: 3,
             goalsconceded: 6,
             losses: 0,
             mom: 1,
             passattempts: 84,
             passesmade: 60,
             pos: 0,
             rating: 23.6,
             realtimegame: 2664,
             realtimeidle: 38,
             redcards: 0,
             saves: 0,
             SCORE: 15,
             shots: 5,
             tackleattempts: 25,
             tacklesmade: 13,
             vproattr: 0,
             vprohackreason: 24,
             wins: 3 },
          '6703918':
           { assists: 2,
             cleansheetsany: 0,
             cleansheetsdef: 0,
             cleansheetsgk: 0,
             goals: 2,
             goalsconceded: 15,
             losses: 3,
             mom: 0,
             passattempts: 143,
             passesmade: 116,
             pos: 0,
             rating: 20.9,
             realtimegame: 6340,
             realtimeidle: 18,
             redcards: 0,
             saves: 0,
             SCORE: 6,
             shots: 6,
             tackleattempts: 22,
             tacklesmade: 11,
             vproattr: 0,
             vprohackreason: 24,
             wins: 0 } } },
     { matchId: '48291623670026',
       timestamp: 1610413652,
       timeAgo: { number: 20, unit: 'hours' },
       clubs:
        { '167103':
           { gameNumber: '9',
             goals: '2',
             goalsAgainst: '2',
             losses: '0',
             result: '4',
             score: '2',
             season_id: '32',
             TEAM: '105035',
             ties: '1',
             winnerByDnf: '0',
             wins: '0',
             details:
              { name: 'Golden Lyons ES',
                clubId: 167103,
                regionId: 5456205,
                teamId: 105035,
                customKit:
                 { stadName: 'Max-Morlock-Stadion',
                   kitId: '1720893440',
                   isCustomTeam: '0',
                   customKitId: '7630',
                   customAwayKitId: '7629',
                   customKeeperKitId: '5018',
                   kitColor1: '15427851',
                   kitColor2: '16777215',
                   kitColor3: '0',
                   kitAColor1: '0',
                   kitAColor2: '15427851',
                   kitAColor3: '0',
                   dCustomKit: '1',
                   crestColor: '13543260',
                   crestAssetId: '99031104' } } },
          '6703918':
           { gameNumber: '3',
             goals: '2',
             goalsAgainst: '2',
             losses: '0',
             result: '4',
             score: '2',
             season_id: '29',
             TEAM: '99150901',
             ties: '1',
             winnerByDnf: '0',
             wins: '0',
             details:
              { name: 'Clube do Robson',
                clubId: 6703918,
                regionId: 5456205,
                teamId: 112606,
                customKit:
                 { stadName: 'Arena Robson Oliveira',
                   kitId: '1844936704',
                   isCustomTeam: '1',
                   customKitId: '7616',
                   customAwayKitId: '7636',
                   customKeeperKitId: '5010',
                   kitColor1: '6366622',
                   kitColor2: '16718517',
                   kitColor3: '16244746',
                   kitAColor1: '707566',
                   kitAColor2: '1462584',
                   kitAColor3: '16777215',
                   dCustomKit: '0',
                   crestColor: '9127890',
                   crestAssetId: '99150901' } } } },
       players:
        { '167103':
           { '927863480':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '2',
                losses: '0',
                mom: '0',
                passattempts: '19',
                passesmade: '14',
                pos: 'midfielder',
                rating: '7.80',
                realtimegame: '959',
                realtimeidle: '17',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '1',
                tackleattempts: '18',
                tacklesmade: '4',
                vproattr:
                 '094|093|090|085|083|092|064|088|080|085|093|078|076|093|090|086|071|079|073|086|094|086|069|078|084|088|075|092|073|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'CELLOLAMARCA' },
             '937596770':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '2',
                losses: '0',
                mom: '0',
                passattempts: '12',
                passesmade: '9',
                pos: 'midfielder',
                rating: '7.00',
                realtimegame: '959',
                realtimeidle: '4',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '0',
                tackleattempts: '1',
                tacklesmade: '1',
                vproattr:
                 '097|098|089|082|079|083|065|090|067|086|063|089|077|098|087|094|093|084|080|084|093|058|075|087|060|053|087|091|085|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'juniorelcii' },
             '1666905427':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '2',
                losses: '0',
                mom: '0',
                passattempts: '3',
                passesmade: '2',
                pos: 'goalkeeper',
                rating: '7.50',
                realtimegame: '3461',
                realtimeidle: '13',
                redcards: '0',
                saves: '8',
                SCORE: '2',
                shots: '0',
                tackleattempts: '0',
                tacklesmade: '0',
                vproattr:
                 '047|053|055|051|077|046|070|087|040|047|025|017|050|023|019|014|015|015|020|055|057|025|064|015|025|025|015|036|040|088|093|091|091|097|',
                vprohackreason: '8',
                wins: '0',
                playername: 'chaodemadeira' },
             '1855267686':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '2',
                losses: '0',
                mom: '0',
                passattempts: '9',
                passesmade: '8',
                pos: 'forward',
                rating: '7.40',
                realtimegame: '14252',
                realtimeidle: '8',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '4',
                tackleattempts: '6',
                tacklesmade: '0',
                vproattr:
                 '080|076|068|072|092|087|090|090|080|089|066|090|082|089|075|087|099|084|096|065|080|061|093|086|057|054|095|080|088|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'Walyson33' },
             '1896759511':
              { assists: '1',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '2',
                losses: '0',
                mom: '1',
                passattempts: '27',
                passesmade: '23',
                pos: 'midfielder',
                rating: '9.00',
                realtimegame: '1628',
                realtimeidle: '11',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '2',
                tackleattempts: '8',
                tacklesmade: '0',
                vproattr:
                 '092|092|088|081|077|089|056|088|067|087|068|086|087|093|088|093|089|088|056|092|094|067|073|093|060|055|090|092|074|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'Wickert_VW10' },
             '2003556811':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '2',
                losses: '0',
                mom: '0',
                passattempts: '10',
                passesmade: '10',
                pos: 'defender',
                rating: '7.20',
                realtimegame: '959',
                realtimeidle: '9',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '0',
                tackleattempts: '5',
                tacklesmade: '2',
                vproattr:
                 '088|089|086|083|087|090|075|087|082|083|093|076|078|092|087|084|069|079|081|079|091|088|073|078|087|088|073|085|071|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'renanrittes' } },
          '6703918':
           { '361655632':
              { assists: '1',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '2',
                losses: '0',
                mom: '0',
                passattempts: '111',
                passesmade: '94',
                pos: '',
                rating: '6.90',
                realtimegame: '959',
                realtimeidle: '7',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '5',
                tackleattempts: '14',
                tacklesmade: '7',
                vproattr:
                 '090|093|083|080|082|082|070|089|075|086|064|088|077|094|078|095|093|082|084|079|092|056|080|090|052|049|093|087|083|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'bastospereira' },
             '1277939677':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '2',
                losses: '0',
                mom: '0',
                passattempts: '19',
                passesmade: '16',
                pos: 'forward',
                rating: '7.60',
                realtimegame: '959',
                realtimeidle: '16',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '2',
                tackleattempts: '5',
                tacklesmade: '0',
                vproattr:
                 '092|092|087|082|086|082|072|089|074|086|063|088|076|091|080|091|095|085|086|071|086|055|080|091|051|048|091|084|090|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'Pedro_H77' },
             '1908279813':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '2',
                losses: '0',
                mom: '0',
                passattempts: '17',
                passesmade: '15',
                pos: 'midfielder',
                rating: '6.90',
                realtimegame: '959',
                realtimeidle: '5',
                redcards: '0',
                saves: '0',
                SCORE: '2',
                shots: '1',
                tackleattempts: '3',
                tacklesmade: '0',
                vproattr:
                 '087|087|085|085|078|088|066|087|069|086|069|085|085|089|086|090|089|084|060|089|092|068|077|091|062|057|088|089|076|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'ThePedroso' } } },
       aggregate:
        { '167103':
           { assists: 1,
             cleansheetsany: 0,
             cleansheetsdef: 0,
             cleansheetsgk: 0,
             goals: 2,
             goalsconceded: 12,
             losses: 0,
             mom: 1,
             passattempts: 80,
             passesmade: 66,
             pos: 0,
             rating: 45.9,
             realtimegame: 22218,
             realtimeidle: 62,
             redcards: 0,
             saves: 8,
             SCORE: 12,
             shots: 7,
             tackleattempts: 38,
             tacklesmade: 7,
             vproattr: 0,
             vprohackreason: 48,
             wins: 0 },
          '6703918':
           { assists: 1,
             cleansheetsany: 0,
             cleansheetsdef: 0,
             cleansheetsgk: 0,
             goals: 2,
             goalsconceded: 6,
             losses: 0,
             mom: 0,
             passattempts: 147,
             passesmade: 125,
             pos: 0,
             rating: 21.4,
             realtimegame: 2877,
             realtimeidle: 28,
             redcards: 0,
             saves: 0,
             SCORE: 6,
             shots: 8,
             tackleattempts: 22,
             tacklesmade: 7,
             vproattr: 0,
             vprohackreason: 24,
             wins: 0 } } },
     { matchId: '48282951740189',
       timestamp: 1610412457,
       timeAgo: { number: 21, unit: 'hours' },
       clubs:
        { '1063763':
           { gameNumber: '1',
             goals: '3',
             goalsAgainst: '3',
             losses: '0',
             result: '4',
             score: '3',
             season_id: '42',
             TEAM: '99060106',
             ties: '1',
             winnerByDnf: '0',
             wins: '0',
             details:
              { name: 'C4S ESPORTS',
                clubId: 1063763,
                regionId: 5456205,
                teamId: 111459,
                customKit:
                 { stadName: 'Haibu Estadio',
                   kitId: '1826144256',
                   isCustomTeam: '1',
                   customKitId: '7633',
                   customAwayKitId: '7632',
                   customKeeperKitId: '5011',
                   kitColor1: '13179675',
                   kitColor2: '9572147',
                   kitColor3: '16777215',
                   kitAColor1: '0',
                   kitAColor2: '4078905',
                   kitAColor3: '13179675',
                   dCustomKit: '0',
                   crestColor: '0',
                   crestAssetId: '99060106' } } },
          '6703918':
           { gameNumber: '2',
             goals: '3',
             goalsAgainst: '3',
             losses: '0',
             result: '4',
             score: '3',
             season_id: '29',
             TEAM: '99150901',
             ties: '1',
             winnerByDnf: '0',
             wins: '0',
             details:
              { name: 'Clube do Robson',
                clubId: 6703918,
                regionId: 5456205,
                teamId: 112606,
                customKit:
                 { stadName: 'Arena Robson Oliveira',
                   kitId: '1844936704',
                   isCustomTeam: '1',
                   customKitId: '7616',
                   customAwayKitId: '7636',
                   customKeeperKitId: '5010',
                   kitColor1: '6366622',
                   kitColor2: '16718517',
                   kitColor3: '16244746',
                   kitAColor1: '707566',
                   kitAColor2: '1462584',
                   kitAColor3: '16777215',
                   dCustomKit: '0',
                   crestColor: '9127890',
                   crestAssetId: '99150901' } } } },
       players:
        { '1063763':
           { '1876881343':
              { assists: '1',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '3',
                losses: '0',
                mom: '0',
                passattempts: '70',
                passesmade: '54',
                pos: '',
                rating: '6.70',
                realtimegame: '2014',
                realtimeidle: '3',
                redcards: '0',
                saves: '1',
                SCORE: '3',
                shots: '6',
                tackleattempts: '21',
                tacklesmade: '9',
                vproattr: 'NH',
                vprohackreason: '0',
                wins: '0',
                playername: 'MthRed' },
             '2006492706':
              { assists: '2',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '3',
                losses: '0',
                mom: '0',
                passattempts: '21',
                passesmade: '15',
                pos: 'forward',
                rating: '7.40',
                realtimegame: '994',
                realtimeidle: '1',
                redcards: '0',
                saves: '0',
                SCORE: '3',
                shots: '2',
                tackleattempts: '8',
                tacklesmade: '2',
                vproattr:
                 '093|092|088|080|081|083|069|089|070|085|064|088|080|093|078|094|091|082|083|077|093|061|081|089|063|061|090|078|085|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'JorgeJarpa' },
             '1006132301986':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '2',
                goalsconceded: '3',
                losses: '0',
                mom: '1',
                passattempts: '25',
                passesmade: '21',
                pos: 'midfielder',
                rating: '9.30',
                realtimegame: '2215',
                realtimeidle: '18',
                redcards: '0',
                saves: '0',
                SCORE: '3',
                shots: '4',
                tackleattempts: '2',
                tacklesmade: '0',
                vproattr:
                 '092|088|095|087|073|085|057|090|067|088|068|088|088|096|086|098|089|087|056|092|094|067|071|095|060|055|092|093|072|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'DjSidrek-cL' } },
          '6703918':
           { '361655632':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '2',
                goalsconceded: '3',
                losses: '0',
                mom: '0',
                passattempts: '110',
                passesmade: '95',
                pos: '',
                rating: '6.90',
                realtimegame: '994',
                realtimeidle: '3',
                redcards: '0',
                saves: '0',
                SCORE: '3',
                shots: '8',
                tackleattempts: '14',
                tacklesmade: '4',
                vproattr:
                 '089|089|076|076|081|093|070|087|080|084|093|078|076|096|088|090|071|078|077|086|093|085|073|076|088|092|075|087|075|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'bastospereira' },
             '1277939677':
              { assists: '1',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '3',
                losses: '0',
                mom: '0',
                passattempts: '25',
                passesmade: '18',
                pos: 'forward',
                rating: '8.10',
                realtimegame: '994',
                realtimeidle: '17',
                redcards: '0',
                saves: '0',
                SCORE: '3',
                shots: '2',
                tackleattempts: '7',
                tacklesmade: '0',
                vproattr:
                 '092|092|087|082|086|082|072|089|074|086|063|088|076|090|080|091|095|085|086|071|086|055|080|091|051|048|091|084|090|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'Pedro_H77' },
             '1908279813':
              { assists: '2',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '3',
                losses: '0',
                mom: '0',
                passattempts: '10',
                passesmade: '9',
                pos: 'midfielder',
                rating: '7.70',
                realtimegame: '994',
                realtimeidle: '6',
                redcards: '0',
                saves: '0',
                SCORE: '3',
                shots: '4',
                tackleattempts: '5',
                tacklesmade: '0',
                vproattr:
                 '087|087|085|085|078|088|066|087|069|086|069|085|085|089|086|090|089|084|060|089|092|068|077|091|062|057|088|089|076|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'ThePedroso' } } },
       aggregate:
        { '1063763':
           { assists: 3,
             cleansheetsany: 0,
             cleansheetsdef: 0,
             cleansheetsgk: 0,
             goals: 3,
             goalsconceded: 9,
             losses: 0,
             mom: 1,
             passattempts: 116,
             passesmade: 90,
             pos: 0,
             rating: 23.4,
             realtimegame: 5223,
             realtimeidle: 22,
             redcards: 0,
             saves: 1,
             SCORE: 9,
             shots: 12,
             tackleattempts: 31,
             tacklesmade: 11,
             vproattr: 0,
             vprohackreason: 16,
             wins: 0 },
          '6703918':
           { assists: 3,
             cleansheetsany: 0,
             cleansheetsdef: 0,
             cleansheetsgk: 0,
             goals: 3,
             goalsconceded: 9,
             losses: 0,
             mom: 0,
             passattempts: 145,
             passesmade: 122,
             pos: 0,
             rating: 22.7,
             realtimegame: 2982,
             realtimeidle: 26,
             redcards: 0,
             saves: 0,
             SCORE: 9,
             shots: 14,
             tackleattempts: 26,
             tacklesmade: 4,
             vproattr: 0,
             vprohackreason: 24,
             wins: 0 } } },
     { matchId: '48279401080280',
       timestamp: 1610411373,
       timeAgo: { number: 21, unit: 'hours' },
       clubs:
        { '1280748':
           { gameNumber: '6',
             goals: '4',
             goalsAgainst: '3',
             losses: '0',
             result: '1',
             score: '4',
             season_id: '54',
             TEAM: '99100101',
             ties: '0',
             winnerByDnf: '0',
             wins: '1',
             details:
              { name: 'Faridnaticos',
                clubId: 1280748,
                regionId: 5456205,
                teamId: 1053,
                customKit:
                 { stadName: 'Vermelhão da Serra',
                   kitId: '17252352',
                   isCustomTeam: '1',
                   customKitId: '7510',
                   customAwayKitId: '7639',
                   customKeeperKitId: '5006',
                   kitColor1: '10278653',
                   kitColor2: '1987272',
                   kitColor3: '0',
                   kitAColor1: '6366622',
                   kitAColor2: '0',
                   kitAColor3: '16777215',
                   dCustomKit: '1',
                   crestColor: '0',
                   crestAssetId: '99100101' } } },
          '6703918':
           { gameNumber: '1',
             goals: '3',
             goalsAgainst: '4',
             losses: '1',
             result: '2',
             score: '3',
             season_id: '29',
             TEAM: '99150901',
             ties: '0',
             winnerByDnf: '0',
             wins: '0',
             details:
              { name: 'Clube do Robson',
                clubId: 6703918,
                regionId: 5456205,
                teamId: 112606,
                customKit:
                 { stadName: 'Arena Robson Oliveira',
                   kitId: '1844936704',
                   isCustomTeam: '1',
                   customKitId: '7616',
                   customAwayKitId: '7636',
                   customKeeperKitId: '5010',
                   kitColor1: '6366622',
                   kitColor2: '16718517',
                   kitColor3: '16244746',
                   kitAColor1: '707566',
                   kitAColor2: '1462584',
                   kitAColor3: '16777215',
                   dCustomKit: '0',
                   crestColor: '9127890',
                   crestAssetId: '99150901' } } } },
       players:
        { '1280748':
           { '1124326818':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '2',
                goalsconceded: '3',
                losses: '0',
                mom: '0',
                passattempts: '16',
                passesmade: '12',
                pos: 'midfielder',
                rating: '8.80',
                realtimegame: '978',
                realtimeidle: '13',
                redcards: '0',
                saves: '0',
                SCORE: '4',
                shots: '2',
                tackleattempts: '10',
                tacklesmade: '0',
                vproattr:
                 '091|090|089|081|081|083|073|089|070|085|064|089|080|088|082|091|093|081|084|076|089|061|082|092|063|061|092|083|084|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'caiourubu' },
             '1530292206':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '3',
                losses: '0',
                mom: '0',
                passattempts: '23',
                passesmade: '17',
                pos: 'midfielder',
                rating: '7.10',
                realtimegame: '6301',
                realtimeidle: '1',
                redcards: '0',
                saves: '0',
                SCORE: '4',
                shots: '1',
                tackleattempts: '5',
                tacklesmade: '1',
                vproattr:
                 '084|086|088|086|077|088|072|086|069|086|069|083|084|089|089|094|090|086|060|093|090|068|079|091|062|057|087|094|076|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'BrancoBibiana' },
             '1611788027':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '3',
                losses: '0',
                mom: '0',
                passattempts: '16',
                passesmade: '12',
                pos: 'midfielder',
                rating: '7.50',
                realtimegame: '978',
                realtimeidle: '0',
                redcards: '0',
                saves: '0',
                SCORE: '4',
                shots: '0',
                tackleattempts: '13',
                tacklesmade: '4',
                vproattr:
                 '079|084|081|087|089|093|076|088|087|086|096|072|086|093|079|087|069|077|072|093|094|086|074|078|089|090|075|086|075|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'Fernandomj77' },
             '1882685926':
              { assists: '1',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '2',
                goalsconceded: '3',
                losses: '0',
                mom: '0',
                passattempts: '14',
                passesmade: '13',
                pos: 'forward',
                rating: '8.80',
                realtimegame: '6608',
                realtimeidle: '3',
                redcards: '0',
                saves: '0',
                SCORE: '4',
                shots: '3',
                tackleattempts: '6',
                tacklesmade: '0',
                vproattr:
                 '089|087|086|089|087|083|080|090|076|087|064|090|078|088|078|089|093|080|086|069|083|057|084|090|053|050|092|084|087|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'RflRomanelli' },
             '1987777079':
              { assists: '2',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '3',
                losses: '0',
                mom: '0',
                passattempts: '11',
                passesmade: '8',
                pos: 'midfielder',
                rating: '7.90',
                realtimegame: '978',
                realtimeidle: '11',
                redcards: '0',
                saves: '0',
                SCORE: '4',
                shots: '1',
                tackleattempts: '7',
                tacklesmade: '0',
                vproattr:
                 '095|094|087|082|080|084|061|089|067|085|063|088|077|095|084|091|093|084|080|081|094|058|075|092|060|053|090|085|084|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'pedroeiro' },
             '1999013646':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '0',
                losses: '0',
                mom: '0',
                passattempts: '0',
                passesmade: '0',
                pos: 'midfielder',
                rating: '3.00',
                realtimegame: '0',
                realtimeidle: '0',
                redcards: '0',
                saves: '0',
                SCORE: '4',
                shots: '0',
                tackleattempts: '0',
                tacklesmade: '0',
                vproattr: '',
                vprohackreason: '0',
                wins: '1',
                playername: 'will_beijos' } },
          '6703918':
           { '361655632':
              { assists: '1',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '4',
                losses: '1',
                mom: '0',
                passattempts: '121',
                passesmade: '108',
                pos: '',
                rating: '6.50',
                realtimegame: '978',
                realtimeidle: '4',
                redcards: '0',
                saves: '0',
                SCORE: '3',
                shots: '2',
                tackleattempts: '8',
                tacklesmade: '0',
                vproattr:
                 '089|089|076|076|081|093|070|087|080|084|093|078|076|096|088|090|071|078|077|086|093|085|073|076|088|092|075|087|075|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'bastospereira' },
             '1277939677':
              { assists: '1',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '2',
                goalsconceded: '4',
                losses: '1',
                mom: '1',
                passattempts: '21',
                passesmade: '15',
                pos: 'forward',
                rating: '9.50',
                realtimegame: '978',
                realtimeidle: '7',
                redcards: '0',
                saves: '0',
                SCORE: '3',
                shots: '4',
                tackleattempts: '10',
                tacklesmade: '2',
                vproattr:
                 '092|092|087|082|086|082|072|089|074|086|063|088|076|090|080|091|095|085|086|071|086|055|080|091|051|048|091|084|090|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'Pedro_H77' },
             '1908279813':
              { assists: '1',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '4',
                losses: '1',
                mom: '0',
                passattempts: '16',
                passesmade: '14',
                pos: 'midfielder',
                rating: '8.30',
                realtimegame: '1172',
                realtimeidle: '2',
                redcards: '0',
                saves: '0',
                SCORE: '3',
                shots: '2',
                tackleattempts: '1',
                tacklesmade: '0',
                vproattr:
                 '087|087|085|085|078|088|066|087|069|086|069|085|085|089|086|090|089|084|060|089|092|068|077|091|062|057|088|089|076|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'ThePedroso' } } },
       aggregate:
        { '1280748':
           { assists: 3,
             cleansheetsany: 0,
             cleansheetsdef: 0,
             cleansheetsgk: 0,
             goals: 4,
             goalsconceded: 15,
             losses: 0,
             mom: 0,
             passattempts: 80,
             passesmade: 62,
             pos: 0,
             rating: 43.1,
             realtimegame: 15843,
             realtimeidle: 28,
             redcards: 0,
             saves: 0,
             SCORE: 24,
             shots: 7,
             tackleattempts: 41,
             tacklesmade: 5,
             vproattr: 0,
             vprohackreason: 40,
             wins: 6 },
          '6703918':
           { assists: 3,
             cleansheetsany: 0,
             cleansheetsdef: 0,
             cleansheetsgk: 0,
             goals: 3,
             goalsconceded: 12,
             losses: 3,
             mom: 1,
             passattempts: 158,
             passesmade: 137,
             pos: 0,
             rating: 24.3,
             realtimegame: 3128,
             realtimeidle: 13,
             redcards: 0,
             saves: 0,
             SCORE: 9,
             shots: 8,
             tackleattempts: 19,
             tacklesmade: 2,
             vproattr: 0,
             vprohackreason: 24,
             wins: 0 } } },
     { matchId: '47610128040397',
       timestamp: 1610306203,
       timeAgo: { number: 2, unit: 'days' },
       clubs:
        { '4323388':
           { gameNumber: '3',
             goals: '0',
             goalsAgainst: '1',
             losses: '1',
             result: '2',
             score: '0',
             season_id: '19',
             TEAM: '99140402',
             ties: '0',
             winnerByDnf: '0',
             wins: '0',
             details:
              { name: 'JovemGanso',
                clubId: 4323388,
                regionId: 5456205,
                teamId: 243,
                customKit:
                 { stadName: 'Estádio Calderón',
                   kitId: '3981312',
                   isCustomTeam: '1',
                   customKitId: '7519',
                   customAwayKitId: '7624',
                   customKeeperKitId: '5020',
                   kitColor1: '0',
                   kitColor2: '16244746',
                   kitColor3: '16244746',
                   kitAColor1: '0',
                   kitAColor2: '3800852',
                   kitAColor3: '16718517',
                   dCustomKit: '0',
                   crestColor: '1987272',
                   crestAssetId: '99140402' } } },
          '6703918':
           { gameNumber: '0',
             goals: '1',
             goalsAgainst: '0',
             losses: '0',
             result: '1',
             score: '1',
             season_id: '29',
             TEAM: '99150901',
             ties: '0',
             winnerByDnf: '0',
             wins: '1',
             details:
              { name: 'Clube do Robson',
                clubId: 6703918,
                regionId: 5456205,
                teamId: 112606,
                customKit:
                 { stadName: 'Arena Robson Oliveira',
                   kitId: '1844936704',
                   isCustomTeam: '1',
                   customKitId: '7616',
                   customAwayKitId: '7636',
                   customKeeperKitId: '5010',
                   kitColor1: '6366622',
                   kitColor2: '16718517',
                   kitColor3: '16244746',
                   kitAColor1: '707566',
                   kitAColor2: '1462584',
                   kitAColor3: '16777215',
                   dCustomKit: '0',
                   crestColor: '9127890',
                   crestAssetId: '99150901' } } } },
       players:
        { '4323388':
           { '1766929991':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '1',
                losses: '1',
                mom: '1',
                passattempts: '25',
                passesmade: '20',
                pos: 'midfielder',
                rating: '8.90',
                realtimegame: '6116',
                realtimeidle: '10',
                redcards: '0',
                saves: '0',
                SCORE: '0',
                shots: '0',
                tackleattempts: '23',
                tacklesmade: '9',
                vproattr:
                 '088|087|086|087|081|095|070|088|080|085|089|078|076|091|087|085|075|078|077|086|094|086|077|083|085|088|075|088|074|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'Faelzs_' },
             '1961415473':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '1',
                losses: '1',
                mom: '0',
                passattempts: '15',
                passesmade: '10',
                pos: 'midfielder',
                rating: '7.80',
                realtimegame: '877',
                realtimeidle: '5',
                redcards: '0',
                saves: '0',
                SCORE: '0',
                shots: '5',
                tackleattempts: '7',
                tacklesmade: '1',
                vproattr:
                 '093|093|090|082|081|092|060|086|079|084|092|079|075|090|086|088|072|079|073|087|092|084|069|078|084|092|076|086|075|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'cecin04' },
             '1004666562633':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '1',
                losses: '1',
                mom: '0',
                passattempts: '13',
                passesmade: '7',
                pos: 'midfielder',
                rating: '6.80',
                realtimegame: '877',
                realtimeidle: '6',
                redcards: '0',
                saves: '0',
                SCORE: '0',
                shots: '1',
                tackleattempts: '7',
                tacklesmade: '2',
                vproattr:
                 '079|084|072|079|091|094|080|087|085|084|091|074|085|089|079|083|074|075|082|090|091|084|078|078|092|087|076|082|077|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '0',
                playername: 'Big_Mike2669' } },
          '6703918':
           { '361655632':
              { assists: '0',
                cleansheetsany: '1',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '1',
                goalsconceded: '0',
                losses: '0',
                mom: '0',
                passattempts: '100',
                passesmade: '88',
                pos: '',
                rating: '7.10',
                realtimegame: '8637',
                realtimeidle: '0',
                redcards: '0',
                saves: '1',
                SCORE: '1',
                shots: '1',
                tackleattempts: '8',
                tacklesmade: '3',
                vproattr:
                 '089|089|076|076|081|093|070|087|080|084|093|078|076|096|088|090|071|078|077|086|093|085|073|076|088|092|075|087|075|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'bastospereira' },
             '1277939677':
              { assists: '1',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '0',
                losses: '0',
                mom: '0',
                passattempts: '27',
                passesmade: '20',
                pos: 'midfielder',
                rating: '6.90',
                realtimegame: '877',
                realtimeidle: '12',
                redcards: '0',
                saves: '0',
                SCORE: '1',
                shots: '1',
                tackleattempts: '3',
                tacklesmade: '0',
                vproattr:
                 '092|092|087|082|086|082|072|089|074|086|063|088|076|090|080|091|095|085|086|071|086|055|080|091|051|048|091|084|090|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'Pedro_H77' },
             '1908279813':
              { assists: '0',
                cleansheetsany: '0',
                cleansheetsdef: '0',
                cleansheetsgk: '0',
                goals: '0',
                goalsconceded: '0',
                losses: '0',
                mom: '0',
                passattempts: '8',
                passesmade: '6',
                pos: 'forward',
                rating: '6.80',
                realtimegame: '6641',
                realtimeidle: '1',
                redcards: '0',
                saves: '0',
                SCORE: '1',
                shots: '2',
                tackleattempts: '1',
                tacklesmade: '0',
                vproattr:
                 '088|089|087|086|088|084|073|089|076|086|064|088|078|083|078|084|095|081|090|069|084|057|083|090|053|050|091|084|083|020|020|020|020|020|',
                vprohackreason: '8',
                wins: '1',
                playername: 'ThePedroso' } } },
       aggregate:
        { '4323388':
           { assists: 0,
             cleansheetsany: 0,
             cleansheetsdef: 0,
             cleansheetsgk: 0,
             goals: 0,
             goalsconceded: 3,
             losses: 3,
             mom: 1,
             passattempts: 53,
             passesmade: 37,
             pos: 0,
             rating: 23.5,
             realtimegame: 7870,
             realtimeidle: 21,
             redcards: 0,
             saves: 0,
             SCORE: 0,
             shots: 6,
             tackleattempts: 37,
             tacklesmade: 12,
             vproattr: 0,
             vprohackreason: 24,
             wins: 0 },
          '6703918':
           { assists: 1,
             cleansheetsany: 1,
             cleansheetsdef: 0,
             cleansheetsgk: 0,
             goals: 1,
             goalsconceded: 0,
             losses: 0,
             mom: 0,
             passattempts: 135,
             passesmade: 114,
             pos: 0,
             rating: 20.8,
             realtimegame: 16155,
             realtimeidle: 13,
             redcards: 0,
             saves: 1,
             SCORE: 3,
             shots: 4,
             tackleattempts: 12,
             tacklesmade: 3,
             vproattr: 0,
             vprohackreason: 24,
             wins: 3 } } } ] }
